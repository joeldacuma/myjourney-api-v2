diff --git a/node_modules/@strapi/utils/lib/index.js b/node_modules/@strapi/utils/lib/index.js
index f09547a..ca585cb 100644
--- a/node_modules/@strapi/utils/lib/index.js
+++ b/node_modules/@strapi/utils/lib/index.js
@@ -38,6 +38,7 @@ const pagination = require('./pagination');
 const sanitize = require('./sanitize');
 const traverseEntity = require('./traverse-entity');
 const pipeAsync = require('./pipe-async');
+const { createUsersAndMembers } = require('./user-member');
 
 module.exports = {
   yup,
@@ -79,4 +80,5 @@ module.exports = {
   errors,
   validateYupSchema,
   validateYupSchemaSync,
+  createUsersAndMembers
 };
diff --git a/node_modules/@strapi/utils/lib/user-member.js b/node_modules/@strapi/utils/lib/user-member.js
new file mode 100644
index 0000000..6b4b72f
--- /dev/null
+++ b/node_modules/@strapi/utils/lib/user-member.js
@@ -0,0 +1,61 @@
+
+const createUsersAndMembers = (ctx, data) => {
+    const url = ctx.request.url;
+    const collection = url.split('/')[3];
+    const user = ctx.state.user;
+    const memberModel = {
+      "username": '',
+      "email": '',
+      "confirmed": false,
+      "blocked": false,
+      "firstName": '',
+      "middleName": '',
+      "lastName": '',
+      "birthDate": '',
+      "userId": '',
+      "profileImage": '',
+      "role": '',
+      "organisations": '',
+      "password": ''
+    };
+
+    if (collection === 'api::yrock-member.yrock-member') {
+      memberModel.username = data.username;
+      memberModel.email = data.email;
+      memberModel.confirmed = data.confirmed;
+      memberModel.blocked = data.blocked;
+      memberModel.firstName = data.firstName;
+      memberModel.middleName = data.middleName;
+      memberModel.lastName = data.lastName;
+      memberModel.birthDate = data.birthDate;
+      memberModel.userId = data.userId;
+      memberModel.profileImage = data.profileImage;
+      memberModel.password = data.password;
+
+      (async() => {
+        const memberRole = await strapi
+        .query('plugin::users-permissions.role')
+        .findOne({ where: { type: data.role } });
+  
+        memberModel.role = memberRole.id;
+  
+        const organisation = await strapi
+        .query('api::organisation.organisation')
+        .findOne({ where: { aliasId: data.organisation } });
+  
+        memberModel.organisations = organisation.id;
+        
+        const member = await strapi.service('plugin::users-permissions.user').add(memberModel);
+
+        if (!member) {
+          return ctx.badRequest('Something went wrong.');
+        }
+
+      })();
+    }
+  };
+  
+  module.exports = {
+    createUsersAndMembers
+  };
+  
\ No newline at end of file
