{"version":3,"file":"component---src-pages-index-backup-jsx-c65ba3d43bcbf1da6b63.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/components/post-author/style.jsx","webpack://gatsby-starter-default/./src/components/post-author/index.jsx","webpack://gatsby-starter-default/./src/components/side-latest-post/style.jsx","webpack://gatsby-starter-default/./src/components/side-latest-post/index.jsx","webpack://gatsby-starter-default/./src/components/stay-in-touch/style.jsx","webpack://gatsby-starter-default/./src/components/stay-in-touch/index.jsx","webpack://gatsby-starter-default/./src/container/latest-post/style.jsx","webpack://gatsby-starter-default/./src/container/latest-post/index.jsx","webpack://gatsby-starter-default/./src/components/hero-category/style.jsx","webpack://gatsby-starter-default/./src/components/hero-category/index.jsx","webpack://gatsby-starter-default/./src/components/hero-blog-post/style.jsx","webpack://gatsby-starter-default/./src/components/hero-blog-post/index.jsx","webpack://gatsby-starter-default/./src/container/home-one/hero/style.jsx","webpack://gatsby-starter-default/./src/container/home-one/hero/index.jsx","webpack://gatsby-starter-default/./src/components/trending-article-item/style.jsx","webpack://gatsby-starter-default/./src/components/trending-article-item/index.jsx","webpack://gatsby-starter-default/./src/components/trending-article-large-item/style.jsx","webpack://gatsby-starter-default/./src/components/trending-article-large-item/index.jsx","webpack://gatsby-starter-default/./src/container/home-one/trending-article/style.jsx","webpack://gatsby-starter-default/./src/container/home-one/trending-article/index.jsx","webpack://gatsby-starter-default/./src/components/single-following-post/style.jsx","webpack://gatsby-starter-default/./src/components/single-following-post/index.jsx","webpack://gatsby-starter-default/./src/container/home-one/from-following/style.jsx","webpack://gatsby-starter-default/./src/container/home-one/from-following/index.jsx","webpack://gatsby-starter-default/./node_modules/gatsby/node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js","webpack://gatsby-starter-default/./src/components/trending-topics/style.jsx","webpack://gatsby-starter-default/./src/components/trending-topics/index.jsx","webpack://gatsby-starter-default/./src/container/home-one/trending-topic/style.jsx","webpack://gatsby-starter-default/./src/container/home-one/trending-topic/index.jsx","webpack://gatsby-starter-default/./src/components/featured-video/style.jsx","webpack://gatsby-starter-default/./src/components/featured-video/index.jsx","webpack://gatsby-starter-default/./src/components/featured-small-video/style.jsx","webpack://gatsby-starter-default/./src/components/featured-small-video/index.jsx","webpack://gatsby-starter-default/./src/container/home-one/featured-video/style.jsx","webpack://gatsby-starter-default/./src/container/home-one/featured-video/index.jsx","webpack://gatsby-starter-default/./src/container/home-one/add-banner/style.jsx","webpack://gatsby-starter-default/./src/container/home-one/add-banner/index.jsx","webpack://gatsby-starter-default/./src/pages/index-backup.jsx","webpack://gatsby-starter-default/./src/utils/functions.js"],"sourcesContent":["import styled, { device } from \"@theme/utils\";\n\nexport const FollowingAuthorArea = styled.div`\n    border: 1px solid #f3f3f3;\n    border-radius: 10px;\n    text-align: center;\n    padding: 30px 15px;\n`;\nexport const AuthorImage = styled.div`\n    border: 1px solid #f3f3f3;\n    display: inline-block;\n    border-radius: 50000px;\n    padding: 11px;\n    margin-bottom: 25px;\n    img {\n        border-radius: 100%;\n    }\n`;\nexport const AuthorTitle = styled.div`\n    margin-bottom: 10px;\n`;\nexport const AuthorName = styled.h4`\n    margin-bottom: 0;\n`;\nexport const AuthorDegination = styled.p`\n    font-size: 14px;\n`;\nexport const AuthorDetails = styled.div``;\nexport const AuthorDetailsText = styled.p`\n    margin-bottom: 20px;\n    font-size: 15px;\n    line-height: 1.6;\n`;\nexport const AuthorPostShare = styled.div`\n    margin-bottom: 30px;\n`;\nexport const SocialShareArea = styled.ul`\n    li {\n        display: inline-block;\n        margin-right: 15px;\n        a {\n            height: 45px;\n            width: 45px;\n            line-height: 45px;\n            text-align: center;\n            background-color: #ddd;\n            border-radius: 5px;\n            display: block;\n        }\n    }\n`;\nexport const ButtonBox = styled.div`\n    a {\n        font-weight: 400;\n        line-height: 1.5;\n        color: #212529;\n        text-align: center;\n        text-decoration: none;\n        vertical-align: middle;\n        cursor: pointer;\n        -webkit-user-select: none;\n        -moz-user-select: none;\n        user-select: none;\n        background-color: transparent;\n        border: 1px solid transparent;\n        padding: 0.375rem 0.75rem;\n        font-size: 1rem;\n        border-radius: 0.25rem;\n        transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out,\n            border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\n\n        height: 50px;\n        line-height: 48px;\n        padding: 0 30px;\n        background-color: #f4f4f4;\n        font-weight: 500;\n        border-radius: 15px;\n        display: inline-block;\n    }\n`;\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\";\nimport { Link } from \"gatsby\";\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\nimport Button from \"../../components/shared/button\";\nimport Social, { SocialLink } from \"../../components/social\";\nimport {\n    FollowingAuthorArea,\n    AuthorImage,\n    AuthorTitle,\n    AuthorName,\n    AuthorDegination,\n    AuthorDetails,\n    AuthorDetailsText,\n    AuthorPostShare,\n    ButtonBox,\n} from \"./style\";\n\nconst PostAuthorBox = ({\n    postAuthorName,\n    postAuthordescription,\n    postAuthorImage,\n    postAuthorBio,\n    authorSlug,\n}) => {\n    const image = getImage(postAuthorImage);\n    return (\n        <FollowingAuthorArea>\n            <AuthorImage>\n                <GatsbyImage image={image} alt=\"\" />\n            </AuthorImage>\n            <AuthorTitle>\n                <AuthorName>\n                    <Link to={`/profile/${authorSlug}`}>{postAuthorName}</Link>\n                </AuthorName>\n                <AuthorDegination>{postAuthordescription}</AuthorDegination>\n            </AuthorTitle>\n            <AuthorDetails>\n                <AuthorDetailsText>{postAuthorBio}</AuthorDetailsText>\n\n                <AuthorPostShare>\n                    <Social sx={{ mt: \"20px\" }} shape=\"rounded-5\" space={15}>\n                        <SocialLink href=\"https://www.facebook.com/\">\n                            <i className=\"icofont-facebook\"></i>\n                        </SocialLink>\n                        <SocialLink href=\"https://www.skype.com/\">\n                            <i className=\"icofont-skype\"></i>\n                        </SocialLink>\n                        <SocialLink href=\"https://twitter.com/home/\">\n                            <i className=\"icofont-twitter\"></i>\n                        </SocialLink>\n                        <SocialLink href=\"https://www.linkedin.com/\">\n                            <i className=\"icofont-linkedin\"></i>\n                        </SocialLink>\n                    </Social>\n                </AuthorPostShare>\n\n                <ButtonBox>\n                    <Button\n                        path={`/profile/${authorSlug}`}\n                        size=\"large\"\n                        sx={{ fontSize: \"14px !important\" }}\n                    >\n                        View Profile\n                        <i className=\"icofont-long-arrow-right\"></i>\n                    </Button>\n                </ButtonBox>\n            </AuthorDetails>\n        </FollowingAuthorArea>\n    );\n};\n\nexport default PostAuthorBox;\n","import styled, { device } from \"@theme/utils\";\n\nexport const SingleLatestPost = styled.div`\n    display: -webkit-box;\n    display: -webkit-flex;\n    display: -ms-flexbox;\n    display: flex;\n    -webkit-box-align: center;\n    -webkit-align-items: center;\n    -ms-flex-align: center;\n    align-items: center;\n    margin-top: 20px;\n`;\nexport const LatestPostThum = styled.div`\n    -webkit-flex-basis: 0 0 auto;\n    -ms-flex-preferred-size: 0 0 auto;\n    flex-basis: 0 0 auto;\n    min-width: 84px;\n    img {\n        border-radius: 10px;\n    }\n`;\nexport const LatestPostContent = styled.div`\n    margin-left: 20px;\n`;\nexport const Title = styled.h6`\n    margin-top: 0px;\n    font-size: 15px;\n`;\nexport const LatestPostMeta = styled.div`\n    font-size: 12px;\n    margin-top: 10px;\n`;\nexport const PostDate = styled.span`\n    position: relative;\n    padding-right: 10px;\n    margin-right: 6px;\n    i {\n        margin-right: 5px;\n    }\n`;\nexport const PostTime = styled.span``;\n","import { Link } from \"gatsby\";\nimport React from \"react\";\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\nimport {\n    SingleLatestPost,\n    LatestPostThum,\n    LatestPostContent,\n    Title,\n    LatestPostMeta,\n    PostDate,\n} from \"./style\";\n\nconst SideLatestPosts = ({ title, date, thume_image, slug, dateSlug }) => {\n    const image = getImage(thume_image);\n    return (\n        <SingleLatestPost>\n            <LatestPostThum>\n                <Link to={`/${slug}`}>\n                    <GatsbyImage image={image} alt=\"\" />\n                </Link>\n            </LatestPostThum>\n            <LatestPostContent>\n                <Title>\n                    <Link to={`/${slug}`}>{title}</Link>\n                </Title>\n                <LatestPostMeta>\n                    <PostDate>\n                        <i className=\"icofont-ui-calendar\"></i>\n                        <Link to={`/date/${dateSlug}`}>{date}</Link>\n                    </PostDate>\n                </LatestPostMeta>\n            </LatestPostContent>\n        </SingleLatestPost>\n    );\n};\n\nexport default SideLatestPosts;\n","import styled, { themeGet, device } from \"@theme/utils\";\n\nexport const StayInTouchArea = styled.div`\n    margin-top: 30px;\n    padding: 30px 24px;\n    background: #fafafa;\n    border-radius: 10px;\n    text-align: center;\n`;\nexport const StayInTouchBox = styled.div`\n    margin-top: 30px;\n    display: flex;\n    flex-wrap: wrap;\n    margin-left: -5px;\n    margin-right: -5px;\n`;\nexport const SingleTouchCol = styled.div`\n    width: 33.333%;\n    flex: 0 0 auto;\n    padding-left: 5px;\n    padding-right: 5px;\n\n    .facebook {\n        .socail-icon {\n            background-color: #4867aa;\n        }\n    }\n    .twitter {\n        .socail-icon {\n            background-color: #1da1f2;\n        }\n    }\n    .behance {\n        .socail-icon {\n            background-color: #1869ff;\n        }\n    }\n    .youtube-play {\n        .socail-icon {\n            background-color: #fe0000;\n        }\n    }\n    .dribbble {\n        .socail-icon {\n            background-color: #ea4c8a;\n        }\n    }\n    .linkedin {\n        .socail-icon {\n            background-color: #007bb6;\n        }\n    }\n`;\nexport const SingleTouch = styled.a`\n    background-color: #ebebeb;\n    width: 100%;\n    margin-bottom: 10px;\n    text-align: center;\n    border-radius: 10px;\n    padding: 14px 10px;\n    display: inline-block;\n    &:hover {\n        background-color: #ddd;\n    }\n`;\nexport const TouchSocailIcon = styled.div`\n    height: 40px;\n    width: 40px;\n    text-align: center;\n    line-height: 40px;\n    margin: auto;\n    margin-bottom: 5px;\n    border-radius: 100%;\n    color: #ffffff;\n`;\nexport const TouchTitle = styled.p`\n    color: #000000;\n    font-size: 12px;\n`;\n","import React from \"react\";\nimport {\n    StayInTouchArea,\n    StayInTouchBox,\n    SingleTouchCol,\n    SingleTouch,\n    TouchSocailIcon,\n    TouchTitle,\n} from \"./style\";\n\nconst StayInTouchs = () => {\n    return (\n        <StayInTouchArea>\n            <div className=\"section-title\">\n                <h3>Stay In Touch</h3>\n            </div>\n            <StayInTouchBox>\n                <SingleTouchCol>\n                    <SingleTouch className=\"facebook\" href=\"#!\">\n                        <TouchSocailIcon className=\"socail-icon\">\n                            <i className=\"icofont-facebook\"></i>\n                        </TouchSocailIcon>\n                        <TouchTitle>5,685K</TouchTitle>\n                    </SingleTouch>\n                </SingleTouchCol>\n                <SingleTouchCol>\n                    <SingleTouch className=\"twitter\" href=\"#!\">\n                        <TouchSocailIcon className=\"socail-icon\">\n                            <i className=\"icofont-twitter\"></i>\n                        </TouchSocailIcon>\n                        <TouchTitle>5,685K</TouchTitle>\n                    </SingleTouch>\n                </SingleTouchCol>\n                <SingleTouchCol>\n                    <SingleTouch className=\"behance\" href=\"#!\">\n                        <TouchSocailIcon className=\"socail-icon\">\n                            <i className=\"icofont-behance\"></i>\n                        </TouchSocailIcon>\n                        <TouchTitle>5,685K</TouchTitle>\n                    </SingleTouch>\n                </SingleTouchCol>\n                <SingleTouchCol>\n                    <SingleTouch className=\"youtube-play\" href=\"#!\">\n                        <TouchSocailIcon className=\"socail-icon\">\n                            <i className=\"icofont-youtube-play\"></i>\n                        </TouchSocailIcon>\n                        <TouchTitle>5,685K</TouchTitle>\n                    </SingleTouch>\n                </SingleTouchCol>\n                <SingleTouchCol>\n                    <SingleTouch className=\"dribbble\" href=\"#!\">\n                        <TouchSocailIcon className=\"socail-icon\">\n                            <i className=\"icofont-dribbble\"></i>\n                        </TouchSocailIcon>\n                        <TouchTitle>5,685K</TouchTitle>\n                    </SingleTouch>\n                </SingleTouchCol>\n                <SingleTouchCol>\n                    <SingleTouch className=\"linkedin\" href=\"#!\">\n                        <TouchSocailIcon className=\"socail-icon\">\n                            <i className=\"icofont-linkedin\"></i>\n                        </TouchSocailIcon>\n                        <TouchTitle>5,685K</TouchTitle>\n                    </SingleTouch>\n                </SingleTouchCol>\n            </StayInTouchBox>\n        </StayInTouchArea>\n    );\n};\n\nexport default StayInTouchs;\n","import styled, { device } from \"@theme/utils\";\n\nexport const LatestPostInnerWrap = styled.div`\n    margin-top: 40px;\n    padding: 30px 24px;\n    background: #fafafa;\n    border-radius: 10px;\n`;\nexport const LatestPostHeader = styled.div``;\nexport const LatestPostBox = styled.div``;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { graphql, useStaticQuery } from \"gatsby\";\nimport SideLatestPosts from \"../../components/side-latest-post\";\nimport { LatestPostInnerWrap, LatestPostHeader, LatestPostBox } from \"./style\";\nconst LatestPostArea = (props) => {\n    const sideLatestPostsQuery = useStaticQuery(graphql`\n        query SideLatestPostsQuery {\n            latestPost: allMarkdownRemark(\n                sort: { fields: [frontmatter___date], order: DESC }\n                limit: 5\n            ) {\n                edges {\n                    node {\n                        id\n                        frontmatter {\n                            title\n                            date(formatString: \"DD MMMM YYYY\")\n                            format\n                            is_featured\n                            thume_image {\n                                childImageSharp {\n                                    gatsbyImageData(\n                                        width: 84\n                                        height: 84\n                                        quality: 100\n                                    )\n                                }\n                            }\n                        }\n                        fields {\n                            slug\n                            dateSlug\n                        }\n                    }\n                }\n            }\n        }\n    `);\n    const sideLatestPostsData = sideLatestPostsQuery.latestPost.edges;\n\n    return (\n        <LatestPostInnerWrap>\n            <LatestPostHeader>\n                <div className=\"section-title\">\n                    <h3>Latest Post</h3>\n                </div>\n            </LatestPostHeader>\n            <LatestPostBox>\n                {sideLatestPostsData &&\n                    sideLatestPostsData.map((latestPosts, i) => {\n                        return (\n                            <SideLatestPosts\n                                key={i}\n                                title={latestPosts.node.frontmatter.title}\n                                thume_image={\n                                    latestPosts.node.frontmatter.thume_image\n                                }\n                                date={latestPosts.node.frontmatter.date}\n                                dateSlug={latestPosts.node.fields.dateSlug}\n                                slug={latestPosts.node.fields.slug}\n                            />\n                        );\n                    })}\n            </LatestPostBox>\n        </LatestPostInnerWrap>\n    );\n};\n\nLatestPostArea.propTypes = {};\n\nexport default LatestPostArea;\n","import styled, { device, themeGet } from \"@theme/utils\";\n\nexport const SingleHeroCategoryItem = styled.div`\n    a {\n        display: block;\n        margin-bottom: 0;\n        margin-top: 35px;\n        position: relative;\n        ${device.small} {\n            margin-top: 0px;\n            margin-bottom: 28px;\n        }\n        ${device.medium} {\n            margin-top: 0px;\n            margin-bottom: 25px;\n        }\n        ${device.large} {\n            margin-bottom: 20px;\n        }\n        ${device.xlarge} {\n            margin-bottom: 30px;\n        }\n\n        .gatsby-image-wrapper-constrained {\n            display: block !important;\n            img {\n                border-radius: 15px;\n                width: 100%;\n            }\n        }\n        &::after {\n            position: absolute;\n            height: 100%;\n            width: 100%;\n            content: \"\";\n            left: 0;\n            top: 0;\n            background-color: rgba(0, 0, 0, 0.7);\n            border-radius: 15px;\n            opacity: 0;\n            visibility: hidden;\n            -webkit-transition: all 0.3s ease-in-out;\n            -o-transition: all 0.3s ease-in-out;\n            transition: all 0.3s ease-in-out;\n        }\n    }\n    .single-hero-hover {\n        opacity: 0;\n        visibility: hidden;\n    }\n    &:hover {\n        a {\n            &::after {\n                opacity: 1;\n                visibility: visible;\n            }\n        }\n        .single-hero-hover {\n            opacity: 1;\n            visibility: visible;\n        }\n    }\n`;\n\nexport const HeroCategoryInnerBox = styled.div`\n    position: absolute;\n    opacity: 0;\n    visibility: hidden;\n    left: 0;\n    top: 50%;\n    transform: translateY(-50%);\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    width: 100%;\n    padding: 10px 20px;\n    color: #fff;\n    z-index: 1;\n    transition: all 0.3s ease-in-out;\n    .icon {\n        font-size: 28px;\n        height: 40px;\n        width: 40px;\n        background-color: ${themeGet(\"colors.primary\")};\n        line-height: 40px;\n        text-align: center;\n        border-radius: 50000px;\n    }\n    ${device.large} {\n        padding: 10px 20px;\n    }\n    ${device.xlarge} {\n        padding: 10px 30px;\n    }\n`;\nexport const Title = styled.h3`\n    color: #ffffff;\n\n    ${device.medium} {\n        font-size: 18px;\n    }\n    ${device.xlarge} {\n        font-size: 20px;\n    }\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"gatsby\";\nimport { slugify } from \"@utils/functions\";\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\nimport { SingleHeroCategoryItem, HeroCategoryInnerBox, Title } from \"./style\";\n\nconst HeroCategory = ({ image, name }) => {\n    const images = getImage(image);\n    return (\n        <SingleHeroCategoryItem>\n            <Link to={`/category/${slugify(name)}`}>\n                <GatsbyImage image={images} alt={name} />\n                <HeroCategoryInnerBox className=\"single-hero-hover\">\n                    <Title>{name}</Title>\n                    <i className=\"icon icofont-long-arrow-right\"></i>\n                </HeroCategoryInnerBox>\n            </Link>\n        </SingleHeroCategoryItem>\n    );\n};\nHeroCategory.propTypes = {\n    image: PropTypes.object,\n    name: PropTypes.string,\n};\nexport default HeroCategory;\n","import styled, { device } from \"@theme/utils\";\n\nexport const SingleHeroBlogPost = styled.div`\n    margin-top: 35px;\n    ${device.large} {\n        margin-top: 25px;\n    }\n    ${device.xlarge} {\n        margin-top: 35px;\n    }\n    &:first-of-type {\n        margin-top: 35px;\n        ${device.large} {\n            margin-top: 0;\n        }\n    }\n`;\nexport const HeroBlogPostArea = styled.div`\n    max-width: 375px;\n    padding-left: 15px;\n    padding-right: 15px;\n`;\nexport const HeroBlogPostTop = styled.div`\n    display: flex;\n    align-items: center;\n    margin-bottom: 20px;\n    ${device.large} {\n        margin-bottom: 10px;\n    }\n`;\nexport const HeroBlogPostCategory = styled.div`\n    margin-right: 25px;\n    a {\n        min-width: 100px;\n        background: #ffebdf;\n        text-align: center;\n        padding: 6px 5px;\n        border-radius: 10px;\n        display: inline-block;\n    }\n`;\nexport const HeroBlogPostAuthor = styled.div`\n    color: #9b9ea1;\n    .hero-blog-post-author a {\n        color: #000000;\n    }\n`;\nexport const HeroBlogPostTitle = styled.h3`\n    margin-bottom: 20px;\n    font-size: 18px;\n    ${device.medium} {\n        margin-bottom: 5px;\n        font-size: 18px;\n    }\n    ${device.xlarge} {\n        margin-top: 20px;\n        font-size: 24px;\n    }\n`;\nexport const PostShortDetails = styled.p``;\nexport const HeroBlogPostMeta = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n`;\nexport const PostMetaLeftSide = styled.div``;\nexport const PostDate = styled.span`\n    position: relative;\n    padding-right: 15px;\n    margin-right: 10px;\n    font-size: 13px;\n    &::after {\n        position: absolute;\n        content: \"\";\n        right: -0px;\n        top: 50%;\n        height: 4px;\n        width: 4px;\n        background: #000000;\n        border-radius: 50000px;\n        -webkit-transform: translateY(-50%);\n        -ms-transform: translateY(-50%);\n        transform: translateY(-50%);\n    }\n    i {\n        margin-right: 3px;\n    }\n`;\nexport const PostReadTime = styled.span`\n    font-size: 13px;\n`;\nexport const PostMetaRightSide = styled.div`\n    a {\n        margin-top: 10px;\n        margin-left: 10px;\n    }\n`;\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { slugify } from \"@utils/functions\";\nimport { StaticImage } from \"gatsby-plugin-image\";\nimport { Link } from \"gatsby\";\nimport {\n    SingleHeroBlogPost,\n    HeroBlogPostTop,\n    HeroBlogPostCategory,\n    HeroBlogPostAuthor,\n    HeroBlogPostTitle,\n    PostShortDetails,\n    HeroBlogPostMeta,\n    PostMetaLeftSide,\n    PostDate,\n    PostReadTime,\n    PostMetaRightSide,\n} from \"./style\";\n\nconst HeroBlogPost = ({\n    title,\n    body,\n    date,\n    slug,\n    dateSlug,\n    categories,\n    authorSlug,\n}) => {\n    return (\n        <Fragment>\n            <SingleHeroBlogPost>\n                <HeroBlogPostTop>\n                    <HeroBlogPostCategory>\n                        {categories &&\n                            categories.map((cat, i) => (\n                                <Link\n                                    key={i}\n                                    to={`/category/${slugify(cat.name)}`}\n                                    className={`cat-btn ${cat.color}`}\n                                >\n                                    {cat.name}\n                                </Link>\n                            ))}\n                    </HeroBlogPostCategory>\n                    <HeroBlogPostAuthor>\n                        By{\" \"}\n                        <Link to={`/profile/${authorSlug}`}>{authorSlug}</Link>\n                    </HeroBlogPostAuthor>\n                </HeroBlogPostTop>\n                <HeroBlogPostTitle>\n                    <Link to={`/${slug}`}>{title}</Link>\n                </HeroBlogPostTitle>\n                <PostShortDetails>{body}</PostShortDetails>\n                <HeroBlogPostMeta>\n                    <PostMetaLeftSide>\n                        <PostDate>\n                            <i className=\"icofont-ui-calendar\"></i>\n                            <Link to={`/date/${dateSlug}`}>{date}</Link>\n                        </PostDate>\n                        <PostReadTime>14 min read</PostReadTime>\n                    </PostMetaLeftSide>\n                    <PostMetaRightSide>\n                        <Link to=\"/\">\n                            <StaticImage\n                                src=\"../../data/images/icons/small-bookmark.png\"\n                                alt=\"\"\n                            />\n                        </Link>\n                        <Link to=\"/\">\n                            <StaticImage\n                                src=\"../../data/images/icons/heart.png\"\n                                alt=\"\"\n                            />\n                        </Link>\n                    </PostMetaRightSide>\n                </HeroBlogPostMeta>\n            </SingleHeroBlogPost>\n        </Fragment>\n    );\n};\nHeroBlogPost.propTypes = {\n    title: PropTypes.string,\n    thume_image: PropTypes.object,\n    video_link: PropTypes.object,\n    date: PropTypes.string,\n    slug: PropTypes.string,\n    dateSlug: PropTypes.string,\n    categories: PropTypes.array,\n    body: PropTypes.string,\n    authorSlug: PropTypes.string,\n};\nexport default HeroBlogPost;\n","import styled, { device } from \"@theme/utils\";\n\nexport const HeroOneArea = styled.div`\n    background-color: #f7f7f7;\n    padding: 60px 0;\n    ${device.small} {\n        padding: 80px 0;\n    }\n`;\n\nexport const HeroInnerArea = styled.div`\n    display: -ms-flexbox;\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-between;\n    margin-right: -15px;\n    margin-left: -15px;\n    ${device.large} {\n        flex-wrap: nowrap;\n    }\n`;\nexport const HeroCategoryArea = styled.div`\n    width: 100%;\n    max-width: 100%;\n    padding-left: 15px;\n    padding-right: 15px;\n    order: 3;\n    ${device.small} {\n        max-width: 36%;\n        order: 2;\n    }\n    ${device.medium} {\n        max-width: 270px;\n        order: 1;\n    }\n    ${device.large} {\n        max-width: 220px;\n    }\n    ${device.xlarge} {\n        max-width: 290px;\n    }\n`;\nexport const HeroBannerArea = styled.div`\n    padding-left: 15px;\n    padding-right: 15px;\n    order: 1;\n    ${device.small} {\n        max-width: 64%;\n        order: 1;\n    }\n    ${device.medium} {\n        max-width: 63%;\n        order: 2;\n    }\n    ${device.large} {\n        max-width: auto;\n    }\n    a {\n        display: block;\n        padding: 10px;\n        background-color: #fff;\n        border-radius: 15px;\n        img {\n            border-radius: 15px;\n        }\n    }\n`;\nexport const HeroBlogPostArea = styled.div`\n    width: 100%;\n    max-width: 100%;\n    padding-left: 15px;\n    padding-right: 15px;\n    order: 2;\n    ${device.small} {\n        order: 3;\n    }\n    ${device.medium} {\n        order: 3;\n    }\n    ${device.large} {\n        max-width: 375px;\n    }\n`;\n","import React from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport HeroCategory from \"@components/hero-category\";\nimport { graphql, useStaticQuery, Link } from \"gatsby\";\nimport { StaticImage } from \"gatsby-plugin-image\";\nimport HeroBlogPost from \"../../../components/hero-blog-post\";\nimport {\n    HeroOneArea,\n    HeroInnerArea,\n    HeroCategoryArea,\n    HeroBlogPostArea,\n    HeroBannerArea,\n} from \"./style\";\n\nconst HeroOne = () => {\n    const heroBlogPostQuery = useStaticQuery(graphql`\n        query HeroBlogPostQuery {\n            categories: allCategoriesJson(limit: 4) {\n                edges {\n                    node {\n                        name\n                        image {\n                            childImageSharp {\n                                gatsbyImageData(\n                                    width: 260\n                                    height: 110\n                                    quality: 100\n                                )\n                            }\n                        }\n                    }\n                }\n            }\n            heroBlogPost: allMarkdownRemark(\n                sort: { fields: [frontmatter___date], order: DESC }\n                limit: 2\n            ) {\n                edges {\n                    node {\n                        id\n                        frontmatter {\n                            title\n                            date(formatString: \"DD MMMM YYYY\")\n                            categories {\n                                name\n                                color\n                            }\n                            is_featured\n                            thume_image {\n                                childImageSharp {\n                                    gatsbyImageData(\n                                        width: 750\n                                        height: 400\n                                        quality: 100\n                                    )\n                                }\n                            }\n                            author {\n                                name\n                            }\n                        }\n                        fields {\n                            slug\n                            authorId\n                            dateSlug\n                        }\n                        excerpt(pruneLength: 80)\n                    }\n                }\n            }\n        }\n    `);\n    const heroBlogPost = heroBlogPostQuery.heroBlogPost.edges;\n    const { categories } = heroBlogPostQuery;\n\n    return (\n        <HeroOneArea>\n            <Container>\n                <Row>\n                    <Col lg={12}>\n                        <HeroInnerArea>\n                            <HeroCategoryArea>\n                                {categories.edges.map((cat) => (\n                                    <HeroCategory\n                                        key={cat.node.name}\n                                        name={cat.node.name}\n                                        image={cat.node.image}\n                                    />\n                                ))}\n                            </HeroCategoryArea>\n\n                            <HeroBannerArea>\n                                <Link to=\"/\">\n                                    <StaticImage\n                                        src=\"../../../data/images/hero/hero-01.jpg\"\n                                        alt=\"\"\n                                    />\n                                </Link>\n                            </HeroBannerArea>\n\n                            <HeroBlogPostArea>\n                                {heroBlogPost &&\n                                    heroBlogPost.map((post, i) => {\n                                        return (\n                                            <HeroBlogPost\n                                                key={`heropost-${i}`}\n                                                title={\n                                                    post.node.frontmatter.title\n                                                }\n                                                categories={\n                                                    post.node.frontmatter\n                                                        .categories\n                                                }\n                                                body={post.node.excerpt}\n                                                date={\n                                                    post.node.frontmatter.date\n                                                }\n                                                authorSlug={\n                                                    post.node.fields.authorId\n                                                }\n                                                slug={post.node.fields.slug}\n                                                dateSlug={\n                                                    post.node.fields.dateSlug\n                                                }\n                                            />\n                                        );\n                                    })}\n                            </HeroBlogPostArea>\n                        </HeroInnerArea>\n                    </Col>\n                </Row>\n            </Container>\n        </HeroOneArea>\n    );\n};\n\nexport default HeroOne;\n","import styled, { device } from \"@theme/utils\";\n\n// item style\nexport const TrendingSingleItem = styled.article`\n    display: flex;\n    margin-top: 35px;\n`;\n\nexport const TrendingPostThum = styled.div`\n    max-width: 100px;\n    flex: 0 0 auto;\n    ${device.medium} {\n        max-width: 160px;\n    }\n    a {\n        display: block;\n        height: 100%;\n        .gatsby-image-wrapper-constrained {\n            height: 100%;\n        }\n    }\n    img {\n        height: 100%;\n        vertical-align: middle;\n        -o-object-fit: cover;\n        object-fit: cover;\n        border-radius: 10px;\n    }\n`;\nexport const TrendingPostContent = styled.div`\n    margin-left: 15px;\n    ${device.medium} {\n        margin-left: 30px;\n    }\n`;\nexport const TrendingBlogPostTop = styled.div`\n    display: -webkit-box;\n    display: -webkit-flex;\n    display: -ms-flexbox;\n    display: flex;\n    -webkit-box-align: center;\n    -webkit-align-items: center;\n    -ms-flex-align: center;\n    align-items: center;\n    margin-bottom: 15px;\n`;\n\nexport const TrendingBlogPostCategory = styled.div`\n    margin-right: 10px;\n    ${device.medium} {\n        margin-right: 25px;\n    }\n    a {\n        min-width: 50px;\n        text-align: center;\n        padding: 4px 5px;\n        border-radius: 10px;\n        color: #222;\n\n        display: inline-block;\n        font-size: 12px;\n        ${device.medium} {\n            min-width: 100px;\n            font-size: 15px;\n        }\n    }\n`;\n\nexport const TrendingBlogPostAuthor = styled.div`\n    color: #9b9ea1;\n    font-size: 13px;\n    a {\n        color: #000000;\n    }\n    ${device.medium} {\n        font-size: 15px;\n    }\n`;\n\nexport const HrendingBlogPostTitle = styled.h5`\n    margin-bottom: 15px;\n`;\nexport const TrendingBlogPostMeta = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n`;\nexport const PostMetaLeftSide = styled.div``;\n\nexport const PostDate = styled.span`\n    position: relative;\n    padding-right: 10px;\n    margin-right: 10px;\n    font-size: 13px;\n    i {\n        margin-right: 3px;\n    }\n    &::after {\n        position: absolute;\n        content: \"\";\n        right: -0px;\n        top: 50%;\n        height: 4px;\n        width: 4px;\n        background: #000000;\n        border-radius: 50000px;\n        transform: translateY(-50%);\n    }\n`;\nexport const ReadTime = styled.span`\n    font-size: 13px;\n`;\nexport const PostMetaRightSide = styled.span`\n    display: inline-block;\n    ${device.small} {\n        display: inline-block;\n    }\n    a {\n        margin-left: 10px;\n        margin-top: 5px;\n    }\n`;\n","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport { slugify } from \"@utils/functions\";\nimport {\n    StaticImage,\n    GatsbyImage,\n    getImage,\n    withArtDirection,\n} from \"gatsby-plugin-image\";\nimport {\n    TrendingSingleItem,\n    TrendingBlogPostTop,\n    TrendingBlogPostCategory,\n    TrendingBlogPostAuthor,\n    TrendingPostContent,\n    TrendingPostThum,\n    HrendingBlogPostTitle,\n    TrendingBlogPostMeta,\n    PostMetaLeftSide,\n    PostDate,\n    ReadTime,\n    PostMetaRightSide,\n} from \"./style\";\n\nconst TrendingSingleItems = ({\n    title,\n    thume_image,\n    small_image,\n    dateSlug,\n    authorId,\n    authorSlug,\n    categories,\n    date,\n    slug,\n}) => {\n    const images = withArtDirection(getImage(thume_image), [\n        {\n            media: \"(max-width: 1024px)\",\n            image: getImage(thume_image),\n        },\n        {\n            media: \"(max-width: 575px)\",\n            image: getImage(small_image),\n        },\n    ]);\n    return (\n        <TrendingSingleItem>\n            <TrendingPostThum>\n                <Link to={`/${slug}`}>\n                    <GatsbyImage image={images} alt=\"\" />\n                </Link>\n            </TrendingPostThum>\n            <TrendingPostContent>\n                <TrendingBlogPostTop>\n                    <TrendingBlogPostCategory>\n                        {categories &&\n                            categories.map((cat, i) => (\n                                <Link\n                                    key={i}\n                                    to={`/category/${slugify(cat.name)}`}\n                                    className={`cat-btn ${cat.color}`}\n                                >\n                                    {cat.name}\n                                </Link>\n                            ))}\n                    </TrendingBlogPostCategory>\n                    <TrendingBlogPostAuthor>\n                        By <Link to={`/profile/${authorSlug}`}>{authorId}</Link>\n                    </TrendingBlogPostAuthor>\n                </TrendingBlogPostTop>\n                <HrendingBlogPostTitle>\n                    <Link to={`/${slug}`}>{title}</Link>\n                </HrendingBlogPostTitle>\n                <TrendingBlogPostMeta>\n                    <PostMetaLeftSide>\n                        <PostDate>\n                            <i className=\"icofont-ui-calendar\"></i>\n                            <Link to={`/date/${dateSlug}`}>{date}</Link>\n                        </PostDate>\n                        <ReadTime>10 min read</ReadTime>\n                    </PostMetaLeftSide>\n                    <PostMetaRightSide>\n                        <Link to=\"/\">\n                            <StaticImage\n                                src=\"../../data/images/icons/small-bookmark.png\"\n                                alt=\"\"\n                            />\n                        </Link>\n                        <Link to=\"/\">\n                            <StaticImage\n                                src=\"../../data/images/icons/heart.png\"\n                                alt=\"\"\n                            />\n                        </Link>\n                    </PostMetaRightSide>\n                </TrendingBlogPostMeta>\n            </TrendingPostContent>\n        </TrendingSingleItem>\n    );\n};\n\nexport default TrendingSingleItems;\n","import styled, { device } from \"@theme/utils\";\n\n// item style\nexport const TrendingSingleItem = styled.article`\n    display: flex;\n    margin-top: 35px;\n`;\n\nexport const TrendingPostThum = styled.div`\n    max-width: 100px;\n    flex: 0 0 auto;\n    ${device.large} {\n        max-width: 160px;\n    }\n    a {\n        display: block;\n        height: 100%;\n    }\n    img {\n        height: 100%;\n        vertical-align: middle;\n        -o-object-fit: cover;\n        object-fit: cover;\n        border-radius: 10px;\n    }\n`;\nexport const TrendingPostContent = styled.div`\n    margin-left: 15px;\n    ${device.medium} {\n        margin-left: 30px;\n    }\n`;\nexport const TrendingBlogPostTop = styled.div`\n    display: flex;\n    align-items: center;\n    margin-bottom: 15px;\n`;\n\nexport const TrendingBlogPostCategory = styled.div`\n    margin-right: 10px;\n    ${device.medium} {\n        margin-right: 25px;\n    }\n    a {\n        min-width: 50px;\n        text-align: center;\n        padding: 4px 5px;\n        border-radius: 10px;\n        color: #222;\n        background-color: #ffebdf;\n        display: inline-block;\n        font-size: 12px;\n        ${device.medium} {\n            min-width: 100px;\n            font-size: 15px;\n        }\n    }\n`;\n\nexport const TrendingBlogPostAuthor = styled.div`\n    color: #9b9ea1;\n    font-size: 13px;\n    a {\n        color: #000000;\n    }\n    ${device.medium} {\n        font-size: 15px;\n    }\n`;\n\nexport const HrendingBlogPostTitle = styled.h5`\n    margin-bottom: 15px;\n`;\nexport const TrendingBlogPostMeta = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n`;\nexport const PostMetaLeftSide = styled.div``;\nexport const PostDate = styled.span`\n    position: relative;\n    padding-right: 10px;\n    margin-right: 10px;\n    font-size: 13px;\n    i {\n        margin-right: 3px;\n    }\n    &::after {\n        position: absolute;\n        content: \"\";\n        right: -0px;\n        top: 50%;\n        height: 4px;\n        width: 4px;\n        background: #000000;\n        border-radius: 50000px;\n        transform: translateY(-50%);\n    }\n`;\nexport const ReadTime = styled.span`\n    font-size: 13px;\n`;\nexport const PostMetaRightSide = styled.span`\n    display: inline-block;\n    a {\n        margin-left: 10px;\n        margin-top: 5px;\n    }\n`;\n\nexport const TrendingLargePostThum = styled.div`\n    max-width: 100px;\n    flex: 0 0 auto;\n    ${device.medium} {\n        max-width: 160px;\n    }\n    ${device.xlarge} {\n        max-width: 315px;\n    }\n    a {\n        display: block;\n        height: 100%;\n        .gatsby-image-wrapper-constrained {\n            height: 100%;\n        }\n    }\n    img {\n        height: 100%;\n        vertical-align: middle;\n        -o-object-fit: cover;\n        object-fit: cover;\n        border-radius: 10px;\n    }\n`;\n","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport { slugify } from \"@utils/functions\";\nimport {\n    StaticImage,\n    GatsbyImage,\n    getImage,\n    withArtDirection,\n} from \"gatsby-plugin-image\";\nimport {\n    TrendingSingleItem,\n    TrendingBlogPostTop,\n    TrendingBlogPostCategory,\n    TrendingBlogPostAuthor,\n    TrendingPostContent,\n    HrendingBlogPostTitle,\n    TrendingBlogPostMeta,\n    PostMetaLeftSide,\n    PostDate,\n    ReadTime,\n    PostMetaRightSide,\n    TrendingLargePostThum,\n} from \"./style\";\n\nconst TrendingSingleLargeItems = ({\n    title,\n    thume_image,\n    small_image,\n    date,\n    dateSlug,\n    categories,\n    authorId,\n    authorSlug,\n    slug,\n}) => {\n    const images = withArtDirection(getImage(thume_image), [\n        {\n            media: \"(max-width: 1024px)\",\n            image: getImage(thume_image),\n        },\n        {\n            media: \"(max-width: 575px)\",\n            image: getImage(small_image),\n        },\n    ]);\n    return (\n        <TrendingSingleItem>\n            <TrendingLargePostThum>\n                <Link to={`/${slug}`}>\n                    <GatsbyImage image={images} alt=\"\" />\n                </Link>\n            </TrendingLargePostThum>\n            <TrendingPostContent>\n                <TrendingBlogPostTop>\n                    <TrendingBlogPostCategory>\n                        {categories &&\n                            categories.map((cat, i) => (\n                                <Link\n                                    key={i}\n                                    to={`/category/${slugify(cat.name)}`}\n                                    className={`cat-btn ${cat.color}`}\n                                >\n                                    {cat.name}\n                                </Link>\n                            ))}\n                    </TrendingBlogPostCategory>\n                    <TrendingBlogPostAuthor>\n                        By <Link to={`/profile/${authorSlug}`}>{authorId}</Link>\n                    </TrendingBlogPostAuthor>\n                </TrendingBlogPostTop>\n                <HrendingBlogPostTitle>\n                    <Link to={`/${slug}`}>{title}</Link>\n                </HrendingBlogPostTitle>\n                <TrendingBlogPostMeta>\n                    <PostMetaLeftSide>\n                        <PostDate>\n                            <i className=\"icofont-ui-calendar\"></i>\n                            <Link to={`/date/${dateSlug}`}>{date}</Link>\n                        </PostDate>\n                        <ReadTime>10 min read</ReadTime>\n                    </PostMetaLeftSide>\n                    <PostMetaRightSide>\n                        <Link to=\"/\">\n                            <StaticImage\n                                src=\"../../data/images/icons/small-bookmark.png\"\n                                alt=\"\"\n                            />\n                        </Link>\n                        <Link to=\"/\">\n                            <StaticImage\n                                src=\"../../data/images/icons/heart.png\"\n                                alt=\"\"\n                            />\n                        </Link>\n                    </PostMetaRightSide>\n                </TrendingBlogPostMeta>\n            </TrendingPostContent>\n        </TrendingSingleItem>\n    );\n};\n\nexport default TrendingSingleLargeItems;\n","import styled, { device } from \"@theme/utils\";\n\nexport const TrendingArticleArea = styled.div`\n    padding-top: 60px;\n    ${device.small} {\n        padding-top: 80px;\n    }\n`;\nexport const TrendingArticleRow = styled.div`\n    display: flex;\n    justify-content: space-between;\n    margin-right: -15px;\n    margin-left: -15px;\n    flex-wrap: wrap;\n    ${device.large} {\n        flex-wrap: nowrap;\n    }\n`;\nexport const TrendingArticleLeftSide = styled.div`\n    max-width: 100%;\n    padding-left: 15px;\n    padding-right: 15px;\n    ${device.large} {\n        max-width: 50%;\n    }\n    ${device.xlarge} {\n        max-width: 515px;\n    }\n`;\nexport const TrendingArticleRightSide = styled.div`\n    max-width: 100%;\n    padding-left: 15px;\n    padding-right: 15px;\n    ${device.large} {\n        max-width: 50%;\n    }\n    ${device.xlarge} {\n        max-width: 675px;\n    }\n`;\n\nexport const TrendingArticleRighSide = styled.div``;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { graphql, useStaticQuery } from \"gatsby\";\nimport TrendingSingleItems from \"../../../components/trending-article-item\";\nimport TrendingSingleLargeItems from \"../../../components/trending-article-large-item\";\nimport {\n    TrendingArticleArea,\n    TrendingArticleRow,\n    TrendingArticleLeftSide,\n    TrendingArticleRightSide,\n} from \"./style\";\n\nconst TredingArticle = (props) => {\n    const tredingArticleQuery = useStaticQuery(graphql`\n        query TredingArticleQueryQuery {\n            smallTredingArticle: allMarkdownRemark(\n                sort: { fields: [frontmatter___date], order: DESC }\n                filter: { frontmatter: { is_trending_article: { eq: true } } }\n                limit: 3\n            ) {\n                edges {\n                    node {\n                        id\n                        frontmatter {\n                            title\n                            video_link\n                            categories {\n                                name\n                                color\n                            }\n                            date(formatString: \"DD-MM-YYYY\")\n                            smallImage: thume_image {\n                                childImageSharp {\n                                    gatsbyImageData(\n                                        width: 100\n                                        height: 169\n                                        layout: CONSTRAINED\n                                        quality: 100\n                                    )\n                                }\n                            }\n                            thume_image {\n                                childImageSharp {\n                                    gatsbyImageData(\n                                        width: 160\n                                        height: 160\n                                        layout: CONSTRAINED\n                                        quality: 100\n                                    )\n                                }\n                            }\n                        }\n                        fields {\n                            slug\n                            authorId\n                            dateSlug\n                        }\n                        excerpt(pruneLength: 225)\n                    }\n                }\n            }\n            largeTredingArticle: allMarkdownRemark(\n                sort: { fields: [frontmatter___date], order: DESC }\n                filter: { frontmatter: { is_trending_article: { eq: true } } }\n                limit: 3\n                skip: 3\n            ) {\n                edges {\n                    node {\n                        id\n                        frontmatter {\n                            title\n                            date(formatString: \"DD-MM-YYYY\")\n                            video_link\n                            categories {\n                                name\n                                color\n                            }\n                            smallImage: thume_image {\n                                childImageSharp {\n                                    gatsbyImageData(\n                                        width: 100\n                                        height: 169\n                                        layout: CONSTRAINED\n                                        quality: 100\n                                    )\n                                }\n                            }\n                            thume_image {\n                                childImageSharp {\n                                    gatsbyImageData(\n                                        width: 315\n                                        height: 160\n                                        layout: CONSTRAINED\n                                        quality: 100\n                                    )\n                                }\n                            }\n                        }\n                        fields {\n                            slug\n                            authorId\n                            dateSlug\n                        }\n                        excerpt(pruneLength: 225)\n                    }\n                }\n            }\n        }\n    `);\n\n    const smalltredingArticleData =\n        tredingArticleQuery.smallTredingArticle.edges;\n    const largetredingArticleData =\n        tredingArticleQuery.largeTredingArticle.edges;\n\n    return (\n        <TrendingArticleArea>\n            <Container>\n                <Row>\n                    <Col lg={8} xs={7}>\n                        <div className=\"section-title mb-40\">\n                            <h3>Trending Article</h3>\n                        </div>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col lg={12}>\n                        <TrendingArticleRow>\n                            <TrendingArticleLeftSide>\n                                {smalltredingArticleData &&\n                                    smalltredingArticleData.map(\n                                        (item, index) => {\n                                            return (\n                                                <TrendingSingleItems\n                                                    key={`trending-${index}`}\n                                                    title={\n                                                        item.node.frontmatter\n                                                            .title\n                                                    }\n                                                    thume_image={\n                                                        item.node.frontmatter\n                                                            .thume_image\n                                                    }\n                                                    small_image={\n                                                        item.node.frontmatter\n                                                            .smallImage\n                                                    }\n                                                    categories={\n                                                        item.node.frontmatter\n                                                            .categories\n                                                    }\n                                                    slug={item.node.fields.slug}\n                                                    authorSlug={\n                                                        item.node.fields\n                                                            .authorId\n                                                    }\n                                                    authorId={\n                                                        item.node.fields\n                                                            .authorId\n                                                    }\n                                                    postAuthor={\n                                                        item.node.frontmatter\n                                                            .author\n                                                    }\n                                                    body={item.node.excerpt}\n                                                    date={\n                                                        item.node.frontmatter\n                                                            .date\n                                                    }\n                                                    dateSlug={\n                                                        item.node.fields\n                                                            .dateSlug\n                                                    }\n                                                />\n                                            );\n                                        }\n                                    )}\n                            </TrendingArticleLeftSide>\n\n                            <TrendingArticleRightSide>\n                                {largetredingArticleData &&\n                                    largetredingArticleData.map(\n                                        (followingBlog, i) => {\n                                            return (\n                                                <TrendingSingleLargeItems\n                                                    key={`largetrending-${i}`}\n                                                    title={\n                                                        followingBlog.node\n                                                            .frontmatter.title\n                                                    }\n                                                    thume_image={\n                                                        followingBlog.node\n                                                            .frontmatter\n                                                            .thume_image\n                                                    }\n                                                    small_image={\n                                                        followingBlog.node\n                                                            .frontmatter\n                                                            .smallImage\n                                                    }\n                                                    categories={\n                                                        followingBlog.node\n                                                            .frontmatter\n                                                            .categories\n                                                    }\n                                                    slug={\n                                                        followingBlog.node\n                                                            .fields.slug\n                                                    }\n                                                    authorSlug={\n                                                        followingBlog.node\n                                                            .fields.authorId\n                                                    }\n                                                    authorId={\n                                                        followingBlog.node\n                                                            .fields.authorId\n                                                    }\n                                                    postAuthor={\n                                                        followingBlog.node\n                                                            .frontmatter.author\n                                                    }\n                                                    body={\n                                                        followingBlog.node\n                                                            .excerpt\n                                                    }\n                                                    date={\n                                                        followingBlog.node\n                                                            .frontmatter.date\n                                                    }\n                                                    dateSlug={\n                                                        followingBlog.node\n                                                            .fields.dateSlug\n                                                    }\n                                                />\n                                            );\n                                        }\n                                    )}\n                            </TrendingArticleRightSide>\n                        </TrendingArticleRow>\n                    </Col>\n                </Row>\n            </Container>\n        </TrendingArticleArea>\n    );\n};\n\nTredingArticle.propTypes = {};\n\nexport default TredingArticle;\n","import styled, { device } from \"@theme/utils\";\n\nexport const SingleFollowingPost = styled.div`\n    margin-bottom: 40px;\n`;\nexport const FollowingPostThum = styled.div`\n    display: block;\n    img {\n        border-radius: 15px;\n    }\n`;\nexport const FollowingPostContent = styled.div``;\nexport const FollowingBlogPostTop = styled.div`\n    display: -webkit-box;\n    display: -webkit-flex;\n    display: -ms-flexbox;\n    display: flex;\n    -webkit-box-align: center;\n    -webkit-align-items: center;\n    -ms-flex-align: center;\n    align-items: center;\n    margin-bottom: 15px;\n    margin-top: 25px;\n`;\nexport const FollowingBlogPostCategory = styled.div`\n    margin-right: 25px;\n`;\nexport const FollowingBlogPostAuthor = styled.div`\n    color: #9b9ea1;\n    a {\n        color: #000000;\n    }\n`;\nexport const FollowingBlogPostTitle = styled.h5`\n    margin-bottom: 15px;\n`;\nexport const FollowingBlogPostMeta = styled.div`\n    display: -webkit-box;\n    display: -webkit-flex;\n    display: -ms-flexbox;\n    display: flex;\n    -webkit-box-pack: justify;\n    -webkit-justify-content: space-between;\n    -ms-flex-pack: justify;\n    justify-content: space-between;\n    -webkit-box-align: center;\n    -webkit-align-items: center;\n    -ms-flex-align: center;\n    align-items: center;\n`;\nexport const PostMetaLeftSide = styled.div``;\nexport const PostMetaRightSide = styled.div`\n    a {\n        margin-left: 10px;\n    }\n`;\nexport const PostDate = styled.span`\n    position: relative;\n    padding-right: 14px;\n    margin-right: 10px;\n    font-size: 13px;\n    &:after {\n        position: absolute;\n        content: \"\";\n        right: -0px;\n        top: 50%;\n        height: 4px;\n        width: 4px;\n        background: #000000;\n        border-radius: 50000px;\n        -webkit-transform: translateY(-50%);\n        -ms-transform: translateY(-50%);\n        transform: translateY(-50%);\n    }\n    i {\n        margin-right: 4px;\n    }\n`;\nexport const PostReadTime = styled.span`\n    font-size: 13px;\n`;\n","import React from \"react\";\nimport { slugify } from \"@utils/functions\";\nimport { StaticImage, GatsbyImage, getImage } from \"gatsby-plugin-image\";\nimport { Link } from \"gatsby\";\nimport {\n    SingleFollowingPost,\n    FollowingPostThum,\n    FollowingPostContent,\n    FollowingBlogPostTop,\n    FollowingBlogPostCategory,\n    FollowingBlogPostAuthor,\n    FollowingBlogPostTitle,\n    FollowingBlogPostMeta,\n    PostMetaLeftSide,\n    PostMetaRightSide,\n    PostDate,\n    PostReadTime,\n} from \"./style\";\n\nconst SingleFollowingPosts = ({\n    title,\n    thume_image,\n    date,\n    slug,\n    dateSlug,\n    categories,\n    authorSlug,\n    authorId,\n}) => {\n    const image = getImage(thume_image);\n    return (\n        <SingleFollowingPost>\n            <FollowingPostThum>\n                <Link to={`/${slug}`}>\n                    <GatsbyImage image={image} alt=\"\" />\n                </Link>\n            </FollowingPostThum>\n            <FollowingPostContent>\n                <FollowingBlogPostTop>\n                    <FollowingBlogPostCategory>\n                        {categories &&\n                            categories.map((cat, i) => (\n                                <Link\n                                    key={i}\n                                    to={`/category/${slugify(cat.name)}`}\n                                    className={`cat-btn ${cat.color}`}\n                                >\n                                    {cat.name}\n                                </Link>\n                            ))}\n                    </FollowingBlogPostCategory>\n                    <FollowingBlogPostAuthor>\n                        By <Link to={`/profile/${authorSlug}`}>{authorId}</Link>\n                    </FollowingBlogPostAuthor>\n                </FollowingBlogPostTop>\n                <FollowingBlogPostTitle>\n                    <Link to={`/${slug}`}>{title}</Link>\n                </FollowingBlogPostTitle>\n                <FollowingBlogPostMeta>\n                    <PostMetaLeftSide>\n                        <PostDate>\n                            <i className=\"icofont-ui-calendar\"></i>\n                            <Link to={`/date/${dateSlug}`}>{date}</Link>\n                        </PostDate>\n                        <PostReadTime>10 min read</PostReadTime>\n                    </PostMetaLeftSide>\n                    <PostMetaRightSide>\n                        <a href=\"/\">\n                            <StaticImage\n                                src=\"../../data/images/icons/small-bookmark.png\"\n                                alt=\"\"\n                            />\n                        </a>\n                        <a href=\"/\">\n                            <StaticImage\n                                src=\"../../data/images/icons/heart.png\"\n                                alt=\"\"\n                            />\n                        </a>\n                    </PostMetaRightSide>\n                </FollowingBlogPostMeta>\n            </FollowingPostContent>\n        </SingleFollowingPost>\n    );\n};\n\nexport default SingleFollowingPosts;\n","import styled, { device } from \"@theme/utils\";\n\nexport const FromFollowingWrap = styled.div`\n    padding-top: 60px;\n    padding-bottom: 60px;\n    ${device.small} {\n        padding-top: 80px;\n        padding-bottom: 80px;\n    }\n`;\n\nexport const FromFollowingHaderArea = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 20px 0;\n    border-top: 1px solid #f3f3f3;\n    border-bottom: 1px solid #f3f3f3;\n    margin-bottom: 40px;\n`;\nexport const FollowingSliderNavigation = styled.div`\n    display: flex;\n    justify-content: space-between;\n    .navigation-button {\n        height: 40px;\n        width: 40px;\n        text-align: center;\n        line-height: 38px;\n        background-color: #f4f4f4;\n        font-size: 24px;\n        border-radius: 50000px;\n        display: inline-block;\n        transition: all 0.3s ease-in-out;\n        &.following-slider-button-prev {\n            margin-left: 10px;\n        }\n    }\n`;\nexport const FromFollowingLeftSide = styled.div`\n    min-width: 100%;\n    max-width: 100%;\n    flex-grow: 1;\n\n    ${device.medium} {\n        min-width: 650px;\n    }\n    ${device.large} {\n        min-width: 850px;\n    }\n`;\n\nexport const FromFollowingRightSide = styled.div`\n    min-width: 100%;\n    flex-grow: 1;\n    ${device.small} {\n        min-width: 335px;\n    }\n    ${device.medium} {\n        min-width: 235px;\n    }\n    ${device.large} {\n        min-width: 235px;\n    }\n    ${device.xlarge} {\n        min-width: 335px;\n    }\n`;\n\nexport const FollowingAddBanner = styled.div`\n    margin-top: 40px;\n`;\n","import React from \"react\";\nimport { graphql, useStaticQuery } from \"gatsby\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { StaticImage } from \"gatsby-plugin-image\";\nimport Swiper, { SwiperSlide } from \"@components/swiper\";\nimport SingleFollowingPosts from \"../../../components/single-following-post\";\nimport PostAuthorBox from \"../../../components/post-author\";\n\nimport {\n    FromFollowingWrap,\n    FromFollowingHaderArea,\n    FollowingSliderNavigation,\n    FromFollowingLeftSide,\n    FromFollowingRightSide,\n    FollowingAddBanner,\n} from \"./style\";\n\nfunction isObjectHasKey(obj, objKey) {\n    return Object.keys(obj).findIndex((key) => key === objKey);\n}\n\nconst FromFollowingArea = ({}) => {\n    const fromFollowingQuery = useStaticQuery(graphql`\n        query FromFollowingQuery {\n            allMarkdownRemark(\n                sort: { fields: [frontmatter___date], order: DESC }\n            ) {\n                edges {\n                    node {\n                        id\n                        frontmatter {\n                            title\n                            date(formatString: \"DD MMMM YYYY\")\n                            categories {\n                                name\n                                color\n                            }\n                            is_featured\n                            thume_image {\n                                childImageSharp {\n                                    gatsbyImageData(\n                                        width: 750\n                                        height: 400\n                                        quality: 100\n                                    )\n                                }\n                            }\n                            author {\n                                name\n                                bio\n                                description\n                                fields {\n                                    authorId\n                                }\n                                social {\n                                    twitter\n                                    google\n                                    facebook\n                                }\n                                image {\n                                    childImageSharp {\n                                        gatsbyImageData(\n                                            layout: FIXED\n                                            width: 80\n                                            height: 80\n                                            quality: 100\n                                        )\n                                    }\n                                }\n                            }\n                        }\n                        fields {\n                            slug\n                            authorId\n                            dateSlug\n                        }\n                        excerpt(pruneLength: 225)\n                    }\n                }\n            }\n        }\n    `);\n    const fromFollowingData = fromFollowingQuery.allMarkdownRemark.edges;\n    let postsByAuthor = {};\n\n    fromFollowingData.forEach((data) => {\n        const { authorId } = data.node.fields;\n\n        const keyIndex = isObjectHasKey(postsByAuthor, authorId);\n        if (keyIndex < 0) {\n            postsByAuthor = {\n                ...postsByAuthor,\n                [authorId]: [data],\n            };\n        } else {\n            postsByAuthor[authorId].push(data);\n        }\n    });\n    return (\n        <FromFollowingWrap>\n            <Container>\n                <Row>\n                    <Col>\n                        <FromFollowingHaderArea>\n                            <div className=\"section-title\">\n                                <h3>From Following</h3>\n                            </div>\n\n                            <FollowingSliderNavigation>\n                                <div className=\"following-slider-button-next navigation-button\">\n                                    <i className=\"icofont-long-arrow-left\"></i>\n                                </div>\n                                <div className=\"following-slider-button-prev navigation-button\">\n                                    <i className=\"icofont-long-arrow-right\"></i>\n                                </div>\n                            </FollowingSliderNavigation>\n                        </FromFollowingHaderArea>\n                    </Col>\n                </Row>\n\n                <Swiper\n                    layout={{\n                        nav: \"following-slider-navigation\",\n                        dots: \"following-dots-style\",\n                    }}\n                    navigation={{\n                        nextEl: \".following-slider-button-next\",\n                        prevEl: \".following-slider-button-prev\",\n                    }}\n                    slidesPerView={1}\n                    spaceBetween={0}\n                >\n                    {Object.keys(postsByAuthor).map((key, i) => {\n                        return (\n                            <SwiperSlide key={i}>\n                                <Row className=\"gx-5\">\n                                    <FromFollowingLeftSide className=\"col\">\n                                        <Row className=\"gx-5\">\n                                            {postsByAuthor[key]\n                                                .slice(0, 4)\n                                                .map((post, i) => {\n                                                    return (\n                                                        <Col\n                                                            md={6}\n                                                            sm={6}\n                                                            key={i}\n                                                        >\n                                                            <SingleFollowingPosts\n                                                                title={\n                                                                    post.node\n                                                                        .frontmatter\n                                                                        .title\n                                                                }\n                                                                thume_image={\n                                                                    post.node\n                                                                        .frontmatter\n                                                                        .thume_image\n                                                                }\n                                                                categories={\n                                                                    post.node\n                                                                        .frontmatter\n                                                                        .categories\n                                                                }\n                                                                body={\n                                                                    post.node\n                                                                        .excerpt\n                                                                }\n                                                                date={\n                                                                    post.node\n                                                                        .frontmatter\n                                                                        .date\n                                                                }\n                                                                authorSlug={\n                                                                    post.node\n                                                                        .fields\n                                                                        .authorId\n                                                                }\n                                                                slug={\n                                                                    post.node\n                                                                        .fields\n                                                                        .slug\n                                                                }\n                                                                authorId={\n                                                                    post.node\n                                                                        .frontmatter\n                                                                        .author\n                                                                        .name\n                                                                }\n                                                                dateSlug={\n                                                                    post.node\n                                                                        .fields\n                                                                        .dateSlug\n                                                                }\n                                                            />\n                                                        </Col>\n                                                    );\n                                                })}\n                                        </Row>\n                                    </FromFollowingLeftSide>\n\n                                    <FromFollowingRightSide className=\"col\">\n                                        <PostAuthorBox\n                                            postAuthorImage={\n                                                postsByAuthor[key][0].node\n                                                    .frontmatter.author.image\n                                            }\n                                            postAuthorName={\n                                                postsByAuthor[key][0].node\n                                                    .frontmatter.author.name\n                                            }\n                                            postAuthorBio={\n                                                postsByAuthor[key][0].node\n                                                    .frontmatter.author.bio\n                                            }\n                                            postAuthordescription={\n                                                postsByAuthor[key][0].node\n                                                    .frontmatter.author\n                                                    .description\n                                            }\n                                            authorSlug={\n                                                postsByAuthor[key][0].node\n                                                    .frontmatter.author.fields\n                                                    .authorId\n                                            }\n                                        />\n\n                                        <FollowingAddBanner>\n                                            <a href=\"/\">\n                                                <StaticImage\n                                                    src=\"../../../data/images/banners/home-following-banner.png\"\n                                                    alt=\"\"\n                                                />\n                                            </a>\n                                        </FollowingAddBanner>\n                                    </FromFollowingRightSide>\n                                </Row>\n                            </SwiperSlide>\n                        );\n                    })}\n                </Swiper>\n            </Container>\n        </FromFollowingWrap>\n    );\n};\n\nexport default FromFollowingArea;\n","export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure undefined\");\n}","import styled, { device } from \"@theme/utils\";\n\nexport const SingleTrendingTopicItem = styled.div`\n    text-align: center;\n    position: relative;\n    a {\n        display: block;\n        min-width: 120px;\n        max-width: 100%;\n        position: relative;\n        border-radius: 15px;\n        img {\n            border-radius: 15px;\n            width: 100%;\n        }\n        &::after {\n            position: absolute;\n            bottom: 0;\n            left: 0;\n            width: 100%;\n            height: 50%;\n            display: block;\n            z-index: 1;\n            content: \"\";\n            background: linear-gradient(to bottom, rgba(0, 0, 0, 0), #333 100%);\n            transition: opacity 0.65s cubic-bezier(0.05, 0.2, 0.1, 1);\n            cursor: pointer;\n            border-radius: 15px;\n        }\n    }\n`;\nexport const Title = styled.h4`\n    position: absolute;\n    bottom: 20px;\n    text-align: center;\n    width: 100%;\n    color: #fff;\n    z-index: 2;\n`;\n","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport { slugify } from \"@utils/functions\";\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\nimport { SingleTrendingTopicItem, Title } from \"./style\";\n\nconst TrendingTopicItems = ({ name, color, image }) => {\n    const images = getImage(image);\n    return (\n        <SingleTrendingTopicItem>\n            <Link to={`/category/${slugify(name)}`}>\n                <GatsbyImage image={images} alt=\"\" />\n                <Title>{name}</Title>\n            </Link>\n        </SingleTrendingTopicItem>\n    );\n};\n\nexport default TrendingTopicItems;\n","import styled, { device, themeGet } from \"@theme/utils\";\nexport const BgGray1Area = styled.div`\n    background-color: #fafafa;\n`;\nexport const TrendingTopicArea = styled.div`\n    padding-top: 60px;\n    padding-bottom: 60px;\n    ${device.small} {\n        padding-top: 80px;\n        padding-bottom: 80px;\n    }\n`;\n\nexport const TrendingTopicSectionTitle = styled.div`\n    max-width: 232px;\n    padding: 0 15px;\n    margin-bottom: 40px;\n`;\n\nexport const TrendingTopicNavigation = styled.div``;\n\nexport const NavigationButton = styled.div`\n    height: 40px;\n    width: 40px;\n    text-align: center;\n    line-height: 38px;\n    background-color: #222;\n    font-size: 24px;\n    border-radius: 50000px;\n    color: #fff;\n    display: inline-block;\n    transition: all 0.3s ease-in-out;\n    &:last-child {\n        margin-left: 10px;\n    }\n    &:hover {\n        background-color: ${themeGet(\"colors.primary\")};\n        color: #fff;\n    }\n    margin-top: 30px;\n`;\nexport const TrendingTopicItemWrap = styled.div`\n    max-width: 968px;\n`;\nexport const SingleTrendingTopicItem = styled.div``;\n","import React from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport Swiper, { SwiperSlide } from \"@components/swiper\";\nimport { graphql, useStaticQuery } from \"gatsby\";\nimport TrendingTopicItems from \"../../../components/trending-topics\";\nimport { flatDeep } from \"../../../utils/functions\";\nimport NewsletterSubscribeOne from \"../../../components/newsletter-subscribe\";\nimport {\n    BgGray1Area,\n    TrendingTopicArea,\n    TrendingTopicSectionTitle,\n    TrendingTopicItemWrap,\n    TrendingTopicNavigation,\n    NavigationButton,\n} from \"./style\";\n\nconst TrendingTopics = () => {\n    const trendingTopicsQuery = useStaticQuery(graphql`\n        query TrendingTopicsQuery {\n            allCategoriesJson(filter: { trending: { eq: true } }) {\n                edges {\n                    node {\n                        name\n                        color\n                        image {\n                            childImageSharp {\n                                gatsbyImageData(\n                                    width: 160\n                                    height: 160\n                                    quality: 100\n                                )\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    `);\n\n    const trendingTopicsData = trendingTopicsQuery.allCategoriesJson.edges;\n    const categories = [\n        ...new Set(flatDeep(trendingTopicsData.map((td) => td.node))),\n    ];\n\n    return (\n        <BgGray1Area>\n            <TrendingTopicArea>\n                <Container>\n                    <Row>\n                        <TrendingTopicSectionTitle>\n                            <h3>Trending Topic</h3>\n                            <TrendingTopicNavigation>\n                                <NavigationButton className=\"trending-topic-button-prev\">\n                                    <i className=\"icofont-long-arrow-left\"></i>\n                                </NavigationButton>\n                                <NavigationButton className=\"trending-topic-button-next\">\n                                    <i className=\"icofont-long-arrow-right\"></i>\n                                </NavigationButton>\n                            </TrendingTopicNavigation>\n                        </TrendingTopicSectionTitle>\n                        <TrendingTopicItemWrap>\n                            <Swiper\n                                layout={{\n                                    nav: \"trending-topic-slider-navigation\",\n                                    dots: \"trending-topic-dots-style\",\n                                }}\n                                navigation={{\n                                    nextEl: \".trending-topic-button-next\",\n                                    prevEl: \".trending-topic-button-prev\",\n                                }}\n                                slidesPerView={5}\n                                spaceBetween={35}\n                                breakpoints={{\n                                    320: {\n                                        spaceBetween: 15,\n                                        slidesPerView: 2,\n                                    },\n                                    480: {\n                                        slidesPerView: 3,\n                                    },\n                                    768: {\n                                        slidesPerView: 4,\n                                    },\n                                    992: {\n                                        slidesPerView: 5,\n                                    },\n                                }}\n                            >\n                                {categories &&\n                                    categories.map((cat, i) => {\n                                        return (\n                                            <SwiperSlide key={i}>\n                                                <TrendingTopicItems\n                                                    name={cat.name}\n                                                    color={cat.color}\n                                                    image={cat.image}\n                                                />\n                                            </SwiperSlide>\n                                        );\n                                    })}\n                            </Swiper>\n                        </TrendingTopicItemWrap>\n                    </Row>\n                    <NewsletterSubscribeOne />\n                </Container>\n            </TrendingTopicArea>\n        </BgGray1Area>\n    );\n};\n\nexport default TrendingTopics;\n","import styled, { themeGet, device } from \"@theme/utils\";\n\nexport const SingleFeaturedVideoItem = styled.div`\n    margin-bottom: 40px;\n`;\nexport const SinglePopupWrap = styled.div`\n    position: relative;\n    .gatsby-image-wrapper-constrained {\n        display: block !important;\n        img {\n            width: 100%;\n            border-radius: 10px;\n        }\n    }\n    .video-link {\n        transition: all 0.3s cubic-bezier(0.645, 0.045, 0.355, 1);\n        display: block;\n        &:hover {\n            & .video-play,\n            & .video-play-sm {\n                transform: scale3d(1.15, 1.15, 1.15);\n            }\n        }\n    }\n`;\nexport const HtPopupVideo = styled.div`\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    margin: auto;\n`;\nexport const VideoButtonTwo = styled.div`\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    -webkit-transform: translate(-50%, -50%);\n    -ms-transform: translate(-50%, -50%);\n    transform: translate(-50%, -50%);\n    & .video-play {\n        position: relative;\n        width: 78px;\n        height: 78px;\n        background: ${themeGet(\"colors.primary\")};\n        border: 3px solid #fff;\n        box-shadow: 0 2px 41px 0 rgba(91, 99, 254, 0.36);\n        border-radius: 50%;\n        transition: all 1s cubic-bezier(0, 0, 0.2, 1) !important;\n        box-shadow: 0 20px 30px rgba(0, 0, 0, 0.07);\n    }\n`;\n\nexport const VideoPlayIcon = styled.span`\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    line-height: 1;\n    margin-left: 1px;\n    &::before {\n        content: \"\";\n        position: absolute;\n        top: 0;\n        left: 0;\n        width: 0;\n        height: 0;\n        transform: translate(-50%, -50%);\n        border-top: 11px solid transparent;\n        border-bottom: 11px solid transparent;\n        border-left: 17px solid #fff;\n        border-top-width: 12px;\n        border-bottom-width: 12px;\n        border-left-width: 19px;\n        border-left-color: #fff;\n    }\n`;\n\nexport const FeaturedVdeoContent = styled.div``;\nexport const FeaturedBlogPostTop = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    margin-bottom: 15px;\n    margin-top: 25px;\n`;\nexport const FrendingBlogPostCategory = styled.div`\n    margin-right: 20px;\n    a {\n        min-width: 90px;\n    }\n`;\nexport const PostMetaLeftSide = styled.div``;\nexport const PostDate = styled.span`\n    position: relative;\n    padding-right: 10px;\n    margin-right: 10px;\n    font-size: 12px;\n    i {\n        margin-right: 5px;\n    }\n    ${device.small} {\n        font-size: 13px;\n    }\n`;\nexport const ReadTime = styled.span``;\nexport const PostMetaRightSide = styled.div`\n    margin-left: 30px;\n    a {\n        margin-left: 10px;\n    }\n`;\nexport const Title = styled.h3``;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { slugify } from \"@utils/functions\";\nimport Video from \"@components/shared/video\";\nimport { Link } from \"gatsby\";\nimport { StaticImage, GatsbyImage, getImage } from \"gatsby-plugin-image\";\nimport {\n    SingleFeaturedVideoItem,\n    SinglePopupWrap,\n    HtPopupVideo,\n    VideoButtonTwo,\n    VideoPlayIcon,\n    FeaturedVdeoContent,\n    FeaturedBlogPostTop,\n    FrendingBlogPostCategory,\n    PostMetaLeftSide,\n    PostDate,\n    ReadTime,\n    PostMetaRightSide,\n    Title,\n} from \"./style\";\n\nconst FeaturedVideoItems = ({\n    title,\n    thume_image,\n    video_link,\n    date,\n    slug,\n    dateSlug,\n    categories,\n}) => {\n    const image = getImage(thume_image);\n\n    // Video Modal Popup\n\n    let video_arr, video_id, video_channel;\n    if (video_link) {\n        video_arr = video_link.split(\"=\", -1);\n        video_id = video_arr[1];\n        video_channel = video_link.split(\".\")[1];\n    }\n    const [isOpen, setOpen] = useState(false);\n\n    return (\n        <SingleFeaturedVideoItem>\n            <div className=\"video-link mt-30\">\n                <SinglePopupWrap>\n                    <GatsbyImage image={image} alt=\"\" />\n                    <HtPopupVideo>\n                        <VideoButtonTwo>\n                            <div\n                                className=\"video-play\"\n                                onClick={() => setOpen(true)}\n                                role=\"button\"\n                                tabIndex=\"0\"\n                                onKeyPress={() => {}}\n                            >\n                                <VideoPlayIcon></VideoPlayIcon>\n                            </div>\n                        </VideoButtonTwo>\n                    </HtPopupVideo>\n                </SinglePopupWrap>\n            </div>\n            <Video\n                channel={video_channel}\n                videoId={video_id}\n                isOpen={isOpen}\n                setOpen={setOpen}\n            />\n            <FeaturedVdeoContent>\n                <FeaturedBlogPostTop>\n                    <FrendingBlogPostCategory>\n                        {categories &&\n                            categories.map((cat, i) => (\n                                <Link\n                                    key={i}\n                                    to={`/category/${slugify(cat.name)}`}\n                                    className={`cat-btn ${cat.color}`}\n                                >\n                                    {cat.name}\n                                </Link>\n                            ))}\n                    </FrendingBlogPostCategory>\n                    <PostMetaLeftSide>\n                        <PostDate>\n                            <i className=\"icofont-ui-calendar\"></i>\n                            <Link to={`/date/${dateSlug}`}>{date}</Link>\n                        </PostDate>\n                    </PostMetaLeftSide>\n                    <PostMetaRightSide>\n                        <a href=\"/\">\n                            <StaticImage\n                                src=\"../../data/images/icons/small-bookmark.png\"\n                                alt=\"\"\n                            />\n                        </a>\n                        <a href=\"/\">\n                            <StaticImage\n                                src=\"../../data/images/icons/heart.png\"\n                                alt=\"\"\n                            />\n                        </a>\n                    </PostMetaRightSide>\n                </FeaturedBlogPostTop>\n                <Title>\n                    <Link to={`/${slug}`}>{title}</Link>\n                </Title>\n            </FeaturedVdeoContent>\n        </SingleFeaturedVideoItem>\n    );\n};\nFeaturedVideoItems.propTypes = {\n    title: PropTypes.string,\n    thume_image: PropTypes.object,\n    video_link: PropTypes.string,\n    date: PropTypes.string,\n    slug: PropTypes.string,\n    dateSlug: PropTypes.string,\n    categories: PropTypes.array,\n};\nexport default FeaturedVideoItems;\n","import styled, { themeGet, device } from \"@theme/utils\";\n\nexport const SingleFeaturedVideoItem = styled.div`\n    margin-bottom: 40px;\n`;\nexport const SinglePopupWrap = styled.div`\n    position: relative;\n\n    .gatsby-image-wrapper-constrained {\n        display: block !important;\n        img {\n            width: 100%;\n            border-radius: 10px;\n        }\n    }\n    .video-link {\n        transition: all 0.3s cubic-bezier(0.645, 0.045, 0.355, 1);\n        display: block;\n        &:hover {\n            & .video-play,\n            & .video-play-sm {\n                transform: scale3d(1.15, 1.15, 1.15);\n            }\n        }\n    }\n`;\nexport const HtPopupVideo = styled.div`\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    margin: auto;\n`;\nexport const VideoButtonTwo = styled.div`\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    -webkit-transform: translate(-50%, -50%);\n    -ms-transform: translate(-50%, -50%);\n    transform: translate(-50%, -50%);\n    & .video-play-sm {\n        width: 58px;\n        height: 58px;\n        background: ${themeGet(\"colors.primary\")};\n        border: 3px solid #fff;\n        box-shadow: 0 2px 41px 0 rgba(91, 99, 254, 0.36);\n        border-radius: 50%;\n        transition: all 1s cubic-bezier(0, 0, 0.2, 1) !important;\n        box-shadow: 0 20px 30px rgba(0, 0, 0, 0.07);\n        & .video-play-icon {\n            position: absolute;\n            top: 50%;\n            left: 50%;\n            transform: translate(-50%, -50%);\n            line-height: 1;\n            margin-left: 1px;\n            &::before {\n                content: \"\";\n                position: absolute;\n                top: 0;\n                left: 0;\n                width: 0;\n                height: 0;\n                transform: translate(-50%, -50%);\n                border-top: 9px solid transparent;\n                border-bottom: 9px solid transparent;\n                border-left: 12px solid #fff;\n                border-top-width: 8px;\n                border-bottom-width: 9px;\n                border-left-width: 15px;\n                border-left-color: $white;\n            }\n        }\n    }\n`;\n\nexport const VideoPlayIcon = styled.span`\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    line-height: 1;\n    margin-left: 1px;\n    &::before {\n        content: \"\";\n        position: absolute;\n        top: 0;\n        left: 0;\n        width: 0;\n        height: 0;\n        transform: translate(-50%, -50%);\n        border-top: 11px solid transparent;\n        border-bottom: 11px solid transparent;\n        border-left: 17px solid #fff;\n        border-top-width: 12px;\n        border-bottom-width: 12px;\n        border-left-width: 19px;\n        border-left-color: $white;\n    }\n`;\n\nexport const FeaturedVdeoContent = styled.div``;\nexport const FeaturedBlogPostTop = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    margin-bottom: 15px;\n    margin-top: 25px;\n`;\nexport const FrendingBlogPostCategory = styled.div`\n    margin-right: 20px;\n    a {\n        min-width: 70px;\n    }\n`;\nexport const PostMetaLeftSide = styled.div``;\nexport const PostDate = styled.span`\n    position: relative;\n    padding-right: 10px;\n    margin-right: 10px;\n    font-size: 12px;\n    i {\n        margin-right: 5px;\n    }\n    ${device.small} {\n        font-size: 13px;\n    }\n`;\nexport const ReadTime = styled.span``;\nexport const PostMetaRightSide = styled.div`\n    margin-left: 30px;\n    a {\n        margin-left: 10px;\n    }\n`;\nexport const Title = styled.h4``;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { slugify } from \"@utils/functions\";\nimport Video from \"@components/shared/video\";\nimport { Link } from \"gatsby\";\nimport { StaticImage, GatsbyImage, getImage } from \"gatsby-plugin-image\";\nimport {\n    SingleFeaturedVideoItem,\n    SinglePopupWrap,\n    HtPopupVideo,\n    VideoButtonTwo,\n    VideoPlayIcon,\n    FeaturedVdeoContent,\n    FeaturedBlogPostTop,\n    FrendingBlogPostCategory,\n    PostMetaLeftSide,\n    PostDate,\n    ReadTime,\n    PostMetaRightSide,\n    Title,\n} from \"./style\";\n\nconst FeaturedSmallVideoItems = ({\n    title,\n    thume_image,\n    video_link,\n    date,\n    slug,\n    dateSlug,\n    categories,\n}) => {\n    const image = getImage(thume_image);\n\n    // Video Modal Popup\n\n    let video_arr, video_id, video_channel;\n    if (video_link) {\n        video_arr = video_link.split(\"=\", -1);\n        video_id = video_arr[1];\n        video_channel = video_link.split(\".\")[1];\n    }\n    const [isOpen, setOpen] = useState(false);\n\n    return (\n        <SingleFeaturedVideoItem>\n            <div className=\"video-link mt-30\">\n                <SinglePopupWrap>\n                    <GatsbyImage image={image} alt=\"\" />\n                    <HtPopupVideo>\n                        <VideoButtonTwo>\n                            <div\n                                className=\"video-play-sm\"\n                                onClick={() => setOpen(true)}\n                                role=\"button\"\n                                tabIndex=\"0\"\n                                onKeyPress={() => {}}\n                            >\n                                <VideoPlayIcon></VideoPlayIcon>\n                            </div>\n                        </VideoButtonTwo>\n                    </HtPopupVideo>\n                </SinglePopupWrap>\n            </div>\n            <Video\n                channel={video_channel}\n                videoId={video_id}\n                isOpen={isOpen}\n                setOpen={setOpen}\n            />\n            <FeaturedVdeoContent>\n                <FeaturedBlogPostTop>\n                    <FrendingBlogPostCategory>\n                        {categories &&\n                            categories.map((cat, i) => (\n                                <Link\n                                    key={i}\n                                    to={`/category/${slugify(cat.name)}`}\n                                    className={`cat-btn ${cat.color}`}\n                                >\n                                    {cat.name}\n                                </Link>\n                            ))}\n                    </FrendingBlogPostCategory>\n                    <PostMetaLeftSide>\n                        <PostDate>\n                            <i className=\"icofont-ui-calendar\"></i>\n                            <Link to={`/date/${dateSlug}`}>{date}</Link>\n                        </PostDate>\n                    </PostMetaLeftSide>\n                    <PostMetaRightSide>\n                        <a href=\"/\">\n                            <StaticImage\n                                src=\"../../data/images/icons/small-bookmark.png\"\n                                alt=\"\"\n                            />\n                        </a>\n                        <a href=\"/\">\n                            <StaticImage\n                                src=\"../../data/images/icons/heart.png\"\n                                alt=\"\"\n                            />\n                        </a>\n                    </PostMetaRightSide>\n                </FeaturedBlogPostTop>\n                <Title>\n                    <Link to={`/${slug}`}>{title}</Link>\n                </Title>\n            </FeaturedVdeoContent>\n        </SingleFeaturedVideoItem>\n    );\n};\nFeaturedSmallVideoItems.propTypes = {\n    title: PropTypes.string,\n    thume_image: PropTypes.object,\n    video_link: PropTypes.string,\n    date: PropTypes.string,\n    slug: PropTypes.string,\n    dateSlug: PropTypes.string,\n    categories: PropTypes.array,\n};\nexport default FeaturedSmallVideoItems;\n","import styled, { device } from \"@theme/utils\";\n\nexport const FeaturedVideoWrap = styled.div`\n    padding-top: 60px;\n    padding-bottom: 60px;\n    ${device.small} {\n        margin-top: 80px;\n        padding-bottom: 80px;\n    }\n`;\nexport const FeaturedVideoCol8 = styled.div`\n    max-width: 100%;\n    -webkit-box-flex: 0;\n    -webkit-flex: 0 0 auto;\n    -ms-flex: 0 0 auto;\n    flex: 0 0 auto;\n    ${device.xlarge} {\n        max-width: 850px;\n    }\n`;\nexport const FeaturedVideoBox = styled.div``;\nexport const LatestPostCol4 = styled.div`\n    max-width: 100%;\n    -webkit-box-flex: 0;\n    -webkit-flex: 0 0 auto;\n    -ms-flex: 0 0 auto;\n    flex: 0 0 auto;\n    ${device.xlarge} {\n        max-width: 363px;\n    }\n`;\n","import React from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport FeaturedVideoItems from \"@components/featured-video\";\nimport FeaturedSmallVideoItems from \"@components/featured-small-video\";\nimport StayInTouchs from \"@components/stay-in-touch\";\nimport { graphql, useStaticQuery } from \"gatsby\";\nimport LatestPostArea from \"../../latest-post\";\n\nimport {\n    FeaturedVideoWrap,\n    FeaturedVideoCol8,\n    FeaturedVideoBox,\n    LatestPostCol4,\n} from \"./style\";\n\nconst FeaturedVideoArea = () => {\n    const featuredVideoAreaQuery = useStaticQuery(graphql`\n        query SideLatestPostsQueryQuery {\n            largeVideoPost: allMarkdownRemark(\n                filter: { frontmatter: { format: { eq: \"video\" } } }\n                limit: 1\n            ) {\n                edges {\n                    node {\n                        id\n                        frontmatter {\n                            title\n                            video_link\n                            thume_image {\n                                childImageSharp {\n                                    gatsbyImageData(\n                                        width: 460\n                                        height: 450\n                                        quality: 100\n                                    )\n                                }\n                            }\n                            date\n                            categories {\n                                name\n                                color\n                            }\n                            author {\n                                name\n                            }\n                        }\n                        fields {\n                            slug\n                            authorId\n                            dateSlug\n                        }\n                    }\n                }\n            }\n            mediumVideoPost: allMarkdownRemark(\n                filter: { frontmatter: { format: { eq: \"video\" } } }\n                limit: 1\n                skip: 1\n            ) {\n                edges {\n                    node {\n                        id\n                        frontmatter {\n                            title\n                            video_link\n                            thume_image {\n                                childImageSharp {\n                                    gatsbyImageData(\n                                        width: 460\n                                        height: 160\n                                        quality: 100\n                                    )\n                                }\n                            }\n                            date\n                            categories {\n                                name\n                                color\n                            }\n                            author {\n                                name\n                            }\n                        }\n                        fields {\n                            slug\n                            authorId\n                            dateSlug\n                        }\n                    }\n                }\n            }\n            smallVideoPost: allMarkdownRemark(\n                filter: { frontmatter: { format: { eq: \"video\" } } }\n                limit: 3\n                skip: 2\n            ) {\n                edges {\n                    node {\n                        id\n                        frontmatter {\n                            title\n                            video_link\n                            thume_image {\n                                childImageSharp {\n                                    gatsbyImageData(\n                                        width: 340\n                                        height: 160\n                                        quality: 100\n                                    )\n                                }\n                            }\n                            date\n                            categories {\n                                name\n                                color\n                            }\n                            author {\n                                name\n                            }\n                        }\n                        fields {\n                            slug\n                            authorId\n                            dateSlug\n                        }\n                    }\n                }\n            }\n        }\n    `);\n    const largeVideoPostsData = featuredVideoAreaQuery.largeVideoPost.edges;\n    const mediumVideoPostsData = featuredVideoAreaQuery.mediumVideoPost.edges;\n    const smallVideoPostsData = featuredVideoAreaQuery.smallVideoPost.edges;\n\n    return (\n        <FeaturedVideoWrap>\n            <Container>\n                <Row className=\"gx-5\">\n                    <FeaturedVideoCol8>\n                        <div className=\"featured-video-haader\">\n                            <div className=\"section-title mb-5\">\n                                <h3>Featured Video</h3>\n                            </div>\n                        </div>\n\n                        <FeaturedVideoBox>\n                            <Row className=\"gx-5\">\n                                <Col lg={7} md={6}>\n                                    {largeVideoPostsData &&\n                                        largeVideoPostsData.map(\n                                            (followingBlog, i) => {\n                                                return (\n                                                    <FeaturedVideoItems\n                                                        key={i}\n                                                        title={\n                                                            followingBlog.node\n                                                                .frontmatter\n                                                                .title\n                                                        }\n                                                        thume_image={\n                                                            followingBlog.node\n                                                                .frontmatter\n                                                                .thume_image\n                                                        }\n                                                        video_link={\n                                                            followingBlog.node\n                                                                .frontmatter\n                                                                .video_link\n                                                        }\n                                                        categories={\n                                                            followingBlog.node\n                                                                .frontmatter\n                                                                .categories\n                                                        }\n                                                        date={\n                                                            followingBlog.node\n                                                                .frontmatter\n                                                                .date\n                                                        }\n                                                        authorSlug={\n                                                            followingBlog.node\n                                                                .fields.authorId\n                                                        }\n                                                        slug={\n                                                            followingBlog.node\n                                                                .fields.slug\n                                                        }\n                                                        authorId={\n                                                            followingBlog.node\n                                                                .frontmatter\n                                                                .author.name\n                                                        }\n                                                        dateSlug={\n                                                            followingBlog.node\n                                                                .fields.dateSlug\n                                                        }\n                                                    />\n                                                );\n                                            }\n                                        )}\n\n                                    {mediumVideoPostsData &&\n                                        mediumVideoPostsData.map(\n                                            (followingBlog, i) => {\n                                                return (\n                                                    <FeaturedVideoItems\n                                                        key={i}\n                                                        title={\n                                                            followingBlog.node\n                                                                .frontmatter\n                                                                .title\n                                                        }\n                                                        thume_image={\n                                                            followingBlog.node\n                                                                .frontmatter\n                                                                .thume_image\n                                                        }\n                                                        video_link={\n                                                            followingBlog.node\n                                                                .frontmatter\n                                                                .video_link\n                                                        }\n                                                        categories={\n                                                            followingBlog.node\n                                                                .frontmatter\n                                                                .categories\n                                                        }\n                                                        date={\n                                                            followingBlog.node\n                                                                .frontmatter\n                                                                .date\n                                                        }\n                                                        authorSlug={\n                                                            followingBlog.node\n                                                                .fields.authorId\n                                                        }\n                                                        slug={\n                                                            followingBlog.node\n                                                                .fields.slug\n                                                        }\n                                                        authorId={\n                                                            followingBlog.node\n                                                                .frontmatter\n                                                                .author.name\n                                                        }\n                                                        dateSlug={\n                                                            followingBlog.node\n                                                                .fields.dateSlug\n                                                        }\n                                                    />\n                                                );\n                                            }\n                                        )}\n                                </Col>\n                                <Col lg={5} md={6}>\n                                    {smallVideoPostsData &&\n                                        smallVideoPostsData.map(\n                                            (followingBlog, i) => {\n                                                return (\n                                                    <FeaturedSmallVideoItems\n                                                        key={i}\n                                                        title={\n                                                            followingBlog.node\n                                                                .frontmatter\n                                                                .title\n                                                        }\n                                                        thume_image={\n                                                            followingBlog.node\n                                                                .frontmatter\n                                                                .thume_image\n                                                        }\n                                                        video_link={\n                                                            followingBlog.node\n                                                                .frontmatter\n                                                                .video_link\n                                                        }\n                                                        categories={\n                                                            followingBlog.node\n                                                                .frontmatter\n                                                                .categories\n                                                        }\n                                                        date={\n                                                            followingBlog.node\n                                                                .frontmatter\n                                                                .date\n                                                        }\n                                                        authorSlug={\n                                                            followingBlog.node\n                                                                .fields.authorId\n                                                        }\n                                                        slug={\n                                                            followingBlog.node\n                                                                .fields.slug\n                                                        }\n                                                        authorId={\n                                                            followingBlog.node\n                                                                .frontmatter\n                                                                .author.name\n                                                        }\n                                                        dateSlug={\n                                                            followingBlog.node\n                                                                .fields.dateSlug\n                                                        }\n                                                    />\n                                                );\n                                            }\n                                        )}\n                                </Col>\n                            </Row>\n                        </FeaturedVideoBox>\n                    </FeaturedVideoCol8>\n\n                    <LatestPostCol4>\n                        <LatestPostArea />\n\n                        <StayInTouchs />\n                    </LatestPostCol4>\n                </Row>\n            </Container>\n        </FeaturedVideoWrap>\n    );\n};\n\nexport default FeaturedVideoArea;\n","import styled, { device } from \"@theme/utils\";\n\nexport const BottomAddBannerArea = styled.div`\n    padding-bottom: 60px;\n    ${device.small} {\n        padding-bottom: 80px;\n    }\n`;\nexport const BottomAddBannerBox = styled.a`\n    position: relative;\n    display: block;\n    .gatsby-image-wrapper-constrained {\n        display: block !important;\n        vertical-align: middle !important;\n        padding: 25px 0px;\n        border-radius: 10px;\n        img {\n            width: 100%;\n        }\n    }\n`;\nexport const BottomAddText = styled.h6`\n    font-size: 25px;\n    position: absolute;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 50px;\n    display: inline-block;\n    span {\n        display: block;\n        font-size: 32px;\n        text-align: left;\n        margin-top: 3px;\n    }\n`;\n","import React from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { StaticImage } from \"gatsby-plugin-image\";\nimport {\n    BottomAddBannerArea,\n    BottomAddBannerBox,\n    BottomAddText,\n} from \"./style\";\n\nconst AddBanner = () => {\n    return (\n        <BottomAddBannerArea>\n            <Container>\n                <Row>\n                    <Col lg={12}>\n                        <BottomAddBannerBox href=\"#\">\n                            <StaticImage\n                                src=\"../../../data/images/banners/bottom-add-banner.jpg\"\n                                alt=\"\"\n                            />\n                            <BottomAddText>\n                                All Food Item\n                                <span>50% Off</span>\n                            </BottomAddText>\n                        </BottomAddBannerBox>\n                    </Col>\n                </Row>\n            </Container>\n        </BottomAddBannerArea>\n    );\n};\n\nexport default AddBanner;\n","import * as React from \"react\";\nimport Layout from \"@layout\";\nimport SEO from \"@components/seo\";\nimport HeroOne from \"../container/home-one/hero\";\nimport TredingArticle from \"../container/home-one/trending-article\";\nimport FromFollowingArea from \"../container/home-one/from-following\";\nimport TrendingTopics from \"../container/home-one/trending-topic\";\nimport FeaturedVideoArea from \"../container/home-one/featured-video\";\nimport AddBanner from \"../container/home-one/add-banner\";\n\nconst IndexPage = () => {\n    return (\n        <Layout>\n            <SEO title=\"Home\" pathname=\"/\" />\n            <HeroOne />\n            <TredingArticle />\n            <FromFollowingArea />\n            <TrendingTopics />\n            <FeaturedVideoArea />\n            <AddBanner />\n        </Layout>\n    );\n};\n\nexport default IndexPage;\n","/* eslint-disable prettier/prettier */\n\nconst getSiblings = function (elem) {\n    var siblings = [];\n    var sibling = elem.parentNode.firstChild;\n    while (sibling) {\n        if (sibling.nodeType === 1 && sibling !== elem) {\n            siblings.push(sibling);\n        }\n        sibling = sibling.nextSibling;\n    }\n    return siblings;\n};\n\nconst getClosest = function (elem, selector) {\n    for (; elem && elem !== document; elem = elem.parentNode) {\n        if (elem.matches(selector)) return elem;\n    }\n    return null;\n};\n\nconst slugify = function (text) {\n    return text\n        .toString()\n        .toLowerCase()\n        .replace(/\\s+/g, \"-\") // Replace spaces with -\n        .replace(/[^\\w-]+/g, \"\") // Remove all non-word chars\n        .replace(/--+/g, \"-\") // Replace multiple - with single -\n        .replace(/^-+/, \"\") // Trim - from start of text\n        .replace(/-+$/, \"\"); // Trim - from end of text\n};\n\nconst createList = ({ list, separator = \",\" }) => {\n    if (!list) return;\n    return list.map((text, index) => {\n        let sep;\n        if (list.length !== index + 1) {\n            sep = separator;\n        }\n        return { text, sep };\n    });\n};\n\nconst flatDeep = (arr, d = 1) => {\n    return d > 0\n        ? arr.reduce(\n              (acc, val) =>\n                  acc.concat(Array.isArray(val) ? flatDeep(val, d - 1) : val),\n              []\n          )\n        : arr.slice();\n};\n\nfunction truncateString(str, num, dots = true) {\n    let endDots = dots ? \"...\" : \"\";\n    if (str.length <= num) {\n        return str;\n    }\n    return str.slice(0, num) + endDots;\n}\n\nfunction slideUp(element, duration = 500) {\n    return new Promise(function (resolve, reject) {\n        element.style.height = element.offsetHeight + \"px\";\n        element.style.transitionProperty = `height, margin, padding`;\n        element.style.transitionDuration = duration + \"ms\";\n        element.offsetHeight;\n        element.style.overflow = \"hidden\";\n        element.style.height = 0;\n        element.style.paddingTop = 0;\n        element.style.paddingBottom = 0;\n        element.style.marginTop = 0;\n        element.style.marginBottom = 0;\n        window.setTimeout(function () {\n            element.style.display = \"none\";\n            element.style.removeProperty(\"height\");\n            element.style.removeProperty(\"padding-top\");\n            element.style.removeProperty(\"padding-bottom\");\n            element.style.removeProperty(\"margin-top\");\n            element.style.removeProperty(\"margin-bottom\");\n            element.style.removeProperty(\"overflow\");\n            element.style.removeProperty(\"transition-duration\");\n            element.style.removeProperty(\"transition-property\");\n            resolve(false);\n        }, duration);\n    });\n}\n\nfunction slideDown(element, duration = 500) {\n    return new Promise(function (resolve, reject) {\n        element.style.removeProperty(\"display\");\n        let display = window.getComputedStyle(element).display;\n\n        if (display === \"none\") display = \"block\";\n\n        element.style.display = display;\n        let height = element.offsetHeight;\n        element.style.overflow = \"hidden\";\n        element.style.height = 0;\n        element.style.paddingTop = 0;\n        element.style.paddingBottom = 0;\n        element.style.marginTop = 0;\n        element.style.marginBottom = 0;\n        element.offsetHeight;\n        element.style.transitionProperty = `height, margin, padding`;\n        element.style.transitionDuration = duration + \"ms\";\n        element.style.height = height + \"px\";\n        element.style.removeProperty(\"padding-top\");\n        element.style.removeProperty(\"padding-bottom\");\n        element.style.removeProperty(\"margin-top\");\n        element.style.removeProperty(\"margin-bottom\");\n        window.setTimeout(function () {\n            element.style.removeProperty(\"height\");\n            element.style.removeProperty(\"overflow\");\n            element.style.removeProperty(\"transition-duration\");\n            element.style.removeProperty(\"transition-property\");\n        }, duration);\n    });\n}\n\nfunction slideToggle(element, duration = 500) {\n    if (window.getComputedStyle(element).display === \"none\") {\n        return slideDown(element, duration);\n    } else {\n        return slideUp(element, duration);\n    }\n}\n\nmodule.exports = {\n    slugify,\n    getSiblings,\n    getClosest,\n    createList,\n    flatDeep,\n    truncateString,\n    slideUp,\n    slideDown,\n    slideToggle,\n};\n"],"names":["FollowingAuthorArea","styled","AuthorImage","AuthorTitle","AuthorName","AuthorDegination","AuthorDetails","AuthorDetailsText","AuthorPostShare","ButtonBox","postAuthorName","postAuthordescription","postAuthorImage","postAuthorBio","authorSlug","image","getImage","G","alt","Link","to","sx","mt","shape","space","href","className","path","size","fontSize","SingleLatestPost","LatestPostThum","LatestPostContent","Title","LatestPostMeta","PostDate","title","date","thume_image","slug","dateSlug","StayInTouchArea","StayInTouchBox","SingleTouchCol","SingleTouch","TouchSocailIcon","TouchTitle","LatestPostInnerWrap","LatestPostHeader","LatestPostBox","props","sideLatestPostsData","useStaticQuery","latestPost","edges","map","latestPosts","i","key","node","frontmatter","fields","SingleHeroCategoryItem","device","HeroCategoryInnerBox","themeGet","name","images","slugify","SingleHeroBlogPost","HeroBlogPostTop","HeroBlogPostCategory","HeroBlogPostAuthor","HeroBlogPostTitle","PostShortDetails","HeroBlogPostMeta","PostMetaLeftSide","PostReadTime","PostMetaRightSide","body","categories","Fragment","cat","color","S","src","HeroOneArea","HeroInnerArea","HeroCategoryArea","HeroBannerArea","HeroBlogPostArea","heroBlogPostQuery","heroBlogPost","Container","Row","Col","lg","post","excerpt","authorId","TrendingSingleItem","TrendingPostThum","TrendingPostContent","TrendingBlogPostTop","TrendingBlogPostCategory","TrendingBlogPostAuthor","HrendingBlogPostTitle","TrendingBlogPostMeta","ReadTime","small_image","withArtDirection","media","TrendingLargePostThum","TrendingArticleArea","TrendingArticleRow","TrendingArticleLeftSide","TrendingArticleRightSide","tredingArticleQuery","smalltredingArticleData","smallTredingArticle","largetredingArticleData","largeTredingArticle","xs","item","index","smallImage","postAuthor","author","followingBlog","SingleFollowingPost","FollowingPostThum","FollowingPostContent","FollowingBlogPostTop","FollowingBlogPostCategory","FollowingBlogPostAuthor","FollowingBlogPostTitle","FollowingBlogPostMeta","FromFollowingWrap","FromFollowingHaderArea","FollowingSliderNavigation","FromFollowingLeftSide","FromFollowingRightSide","FollowingAddBanner","obj","TypeError","fromFollowingData","allMarkdownRemark","postsByAuthor","forEach","data","objKey","Object","keys","findIndex","push","layout","nav","dots","navigation","nextEl","prevEl","slidesPerView","spaceBetween","slice","md","sm","bio","description","SingleTrendingTopicItem","BgGray1Area","TrendingTopicArea","TrendingTopicSectionTitle","TrendingTopicNavigation","NavigationButton","TrendingTopicItemWrap","trendingTopicsData","allCategoriesJson","Set","flatDeep","td","breakpoints","SingleFeaturedVideoItem","SinglePopupWrap","HtPopupVideo","VideoButtonTwo","VideoPlayIcon","FeaturedVdeoContent","FeaturedBlogPostTop","FrendingBlogPostCategory","video_id","video_channel","video_link","split","useState","isOpen","setOpen","onClick","role","tabIndex","onKeyPress","channel","videoId","FeaturedVideoWrap","FeaturedVideoCol8","FeaturedVideoBox","LatestPostCol4","featuredVideoAreaQuery","largeVideoPostsData","largeVideoPost","mediumVideoPostsData","mediumVideoPost","smallVideoPostsData","smallVideoPost","BottomAddBannerArea","BottomAddBannerBox","BottomAddText","pathname","slideUp","element","duration","Promise","resolve","reject","style","height","offsetHeight","transitionProperty","transitionDuration","overflow","paddingTop","paddingBottom","marginTop","marginBottom","window","setTimeout","display","removeProperty","slideDown","getComputedStyle","module","exports","text","toString","toLowerCase","replace","getSiblings","elem","siblings","sibling","parentNode","firstChild","nodeType","nextSibling","getClosest","selector","document","matches","createList","list","separator","sep","length","arr","d","reduce","acc","val","concat","Array","isArray","truncateString","str","num","endDots","slideToggle"],"sourceRoot":""}